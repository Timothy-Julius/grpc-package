// source: grpc/record_directory.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest', null, global);
goog.exportSymbol('proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryResponse', null, global);
goog.exportSymbol('proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest', null, global);
goog.exportSymbol('proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse', null, global);
goog.exportSymbol('proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest', null, global);
goog.exportSymbol('proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse', null, global);
goog.exportSymbol('proto.com.samsung.datastore.recorddirectory.RecordDirectory', null, global);
goog.exportSymbol('proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest', null, global);
goog.exportSymbol('proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest.displayName = 'proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryResponse.displayName = 'proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest.displayName = 'proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryResponse.displayName = 'proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest.displayName = 'proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse.displayName = 'proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest.displayName = 'proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse.displayName = 'proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.recorddirectory.RecordDirectory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.recorddirectory.RecordDirectory.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.recorddirectory.RecordDirectory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.recorddirectory.RecordDirectory.displayName = 'proto.com.samsung.datastore.recorddirectory.RecordDirectory';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    applicationId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    containerId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    environment: jspb.Message.getFieldWithDefault(msg, 3, ""),
    recordDirectoryList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    isSubscribed: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest}
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest;
  return proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest}
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setApplicationId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setContainerId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnvironment(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addRecordDirectory(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSubscribed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApplicationId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getContainerId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEnvironment();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRecordDirectoryList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getIsSubscribed();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional int64 application_id = 1;
 * @return {number}
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest.prototype.getApplicationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest.prototype.setApplicationId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 container_id = 2;
 * @return {number}
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest.prototype.getContainerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest.prototype.setContainerId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string environment = 3;
 * @return {string}
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest.prototype.getEnvironment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest.prototype.setEnvironment = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string record_directory = 4;
 * @return {!Array<string>}
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest.prototype.getRecordDirectoryList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest.prototype.setRecordDirectoryList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest.prototype.addRecordDirectory = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest.prototype.clearRecordDirectoryList = function() {
  return this.setRecordDirectoryList([]);
};


/**
 * optional bool is_subscribed = 5;
 * @return {boolean}
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest.prototype.getIsSubscribed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryRequest.prototype.setIsSubscribed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryResponse}
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryResponse;
  return proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryResponse}
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.recorddirectory.CreateRecordDirectoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    applicationId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    containerId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    environment: jspb.Message.getFieldWithDefault(msg, 3, ""),
    recordDirectoryList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    isSubscribed: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest}
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest;
  return proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest}
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setApplicationId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setContainerId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnvironment(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addRecordDirectory(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSubscribed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApplicationId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getContainerId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEnvironment();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRecordDirectoryList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getIsSubscribed();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional int64 application_id = 1;
 * @return {number}
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest.prototype.getApplicationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest.prototype.setApplicationId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 container_id = 2;
 * @return {number}
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest.prototype.getContainerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest.prototype.setContainerId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string environment = 3;
 * @return {string}
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest.prototype.getEnvironment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest.prototype.setEnvironment = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string record_directory = 4;
 * @return {!Array<string>}
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest.prototype.getRecordDirectoryList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest.prototype.setRecordDirectoryList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest.prototype.addRecordDirectory = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest.prototype.clearRecordDirectoryList = function() {
  return this.setRecordDirectoryList([]);
};


/**
 * optional bool is_subscribed = 5;
 * @return {boolean}
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest.prototype.getIsSubscribed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryRequest.prototype.setIsSubscribed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryResponse}
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryResponse;
  return proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryResponse}
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.recorddirectory.UpdateRecordDirectoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    applicationId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    containerId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    environment: jspb.Message.getFieldWithDefault(msg, 3, ""),
    limit: jspb.Message.getFieldWithDefault(msg, 4, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 5, 0),
    recordDirectoryList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest}
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest;
  return proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest}
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setApplicationId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setContainerId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnvironment(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addRecordDirectory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApplicationId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getContainerId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEnvironment();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getRecordDirectoryList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
};


/**
 * optional int64 application_id = 1;
 * @return {number}
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest.prototype.getApplicationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest.prototype.setApplicationId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 container_id = 2;
 * @return {number}
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest.prototype.getContainerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest.prototype.setContainerId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string environment = 3;
 * @return {string}
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest.prototype.getEnvironment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest.prototype.setEnvironment = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 limit = 4;
 * @return {number}
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 offset = 5;
 * @return {number}
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * repeated string record_directory = 6;
 * @return {!Array<string>}
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest.prototype.getRecordDirectoryList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest.prototype.setRecordDirectoryList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest.prototype.addRecordDirectory = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryRequest.prototype.clearRecordDirectoryList = function() {
  return this.setRecordDirectoryList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordDirectoryList: jspb.Message.toObjectList(msg.getRecordDirectoryList(),
    proto.com.samsung.datastore.recorddirectory.RecordDirectory.toObject, includeInstance),
    subRecordDirectoryList: jspb.Message.toObjectList(msg.getSubRecordDirectoryList(),
    proto.com.samsung.datastore.recorddirectory.RecordDirectory.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse}
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse;
  return proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse}
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.samsung.datastore.recorddirectory.RecordDirectory;
      reader.readMessage(value,proto.com.samsung.datastore.recorddirectory.RecordDirectory.deserializeBinaryFromReader);
      msg.addRecordDirectory(value);
      break;
    case 2:
      var value = new proto.com.samsung.datastore.recorddirectory.RecordDirectory;
      reader.readMessage(value,proto.com.samsung.datastore.recorddirectory.RecordDirectory.deserializeBinaryFromReader);
      msg.addSubRecordDirectory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordDirectoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.samsung.datastore.recorddirectory.RecordDirectory.serializeBinaryToWriter
    );
  }
  f = message.getSubRecordDirectoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.com.samsung.datastore.recorddirectory.RecordDirectory.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RecordDirectory record_directory = 1;
 * @return {!Array<!proto.com.samsung.datastore.recorddirectory.RecordDirectory>}
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse.prototype.getRecordDirectoryList = function() {
  return /** @type{!Array<!proto.com.samsung.datastore.recorddirectory.RecordDirectory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.samsung.datastore.recorddirectory.RecordDirectory, 1));
};


/**
 * @param {!Array<!proto.com.samsung.datastore.recorddirectory.RecordDirectory>} value
 * @return {!proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse} returns this
*/
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse.prototype.setRecordDirectoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.samsung.datastore.recorddirectory.RecordDirectory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.recorddirectory.RecordDirectory}
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse.prototype.addRecordDirectory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.samsung.datastore.recorddirectory.RecordDirectory, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse} returns this
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse.prototype.clearRecordDirectoryList = function() {
  return this.setRecordDirectoryList([]);
};


/**
 * repeated RecordDirectory sub_record_directory = 2;
 * @return {!Array<!proto.com.samsung.datastore.recorddirectory.RecordDirectory>}
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse.prototype.getSubRecordDirectoryList = function() {
  return /** @type{!Array<!proto.com.samsung.datastore.recorddirectory.RecordDirectory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.samsung.datastore.recorddirectory.RecordDirectory, 2));
};


/**
 * @param {!Array<!proto.com.samsung.datastore.recorddirectory.RecordDirectory>} value
 * @return {!proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse} returns this
*/
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse.prototype.setSubRecordDirectoryList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.com.samsung.datastore.recorddirectory.RecordDirectory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.recorddirectory.RecordDirectory}
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse.prototype.addSubRecordDirectory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.com.samsung.datastore.recorddirectory.RecordDirectory, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse} returns this
 */
proto.com.samsung.datastore.recorddirectory.ListRecordDirectoryResponse.prototype.clearSubRecordDirectoryList = function() {
  return this.setSubRecordDirectoryList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    applicationId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    containerId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    environment: jspb.Message.getFieldWithDefault(msg, 3, ""),
    recordDirectoryList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest}
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest;
  return proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest}
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setApplicationId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setContainerId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnvironment(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addRecordDirectory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApplicationId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getContainerId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEnvironment();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRecordDirectoryList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional int64 application_id = 1;
 * @return {number}
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest.prototype.getApplicationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest.prototype.setApplicationId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 container_id = 2;
 * @return {number}
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest.prototype.getContainerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest.prototype.setContainerId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string environment = 3;
 * @return {string}
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest.prototype.getEnvironment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest.prototype.setEnvironment = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string record_directory = 4;
 * @return {!Array<string>}
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest.prototype.getRecordDirectoryList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest.prototype.setRecordDirectoryList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest.prototype.addRecordDirectory = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest} returns this
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryRequest.prototype.clearRecordDirectoryList = function() {
  return this.setRecordDirectoryList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    deletedDirectoriesList: jspb.Message.toObjectList(msg.getDeletedDirectoriesList(),
    proto.com.samsung.datastore.recorddirectory.RecordDirectory.toObject, includeInstance),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse}
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse;
  return proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse}
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.samsung.datastore.recorddirectory.RecordDirectory;
      reader.readMessage(value,proto.com.samsung.datastore.recorddirectory.RecordDirectory.deserializeBinaryFromReader);
      msg.addDeletedDirectories(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeletedDirectoriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.samsung.datastore.recorddirectory.RecordDirectory.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * repeated RecordDirectory deleted_directories = 1;
 * @return {!Array<!proto.com.samsung.datastore.recorddirectory.RecordDirectory>}
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse.prototype.getDeletedDirectoriesList = function() {
  return /** @type{!Array<!proto.com.samsung.datastore.recorddirectory.RecordDirectory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.samsung.datastore.recorddirectory.RecordDirectory, 1));
};


/**
 * @param {!Array<!proto.com.samsung.datastore.recorddirectory.RecordDirectory>} value
 * @return {!proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse} returns this
*/
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse.prototype.setDeletedDirectoriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.samsung.datastore.recorddirectory.RecordDirectory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.recorddirectory.RecordDirectory}
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse.prototype.addDeletedDirectories = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.samsung.datastore.recorddirectory.RecordDirectory, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse} returns this
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse.prototype.clearDeletedDirectoriesList = function() {
  return this.setDeletedDirectoriesList([]);
};


/**
 * optional int32 count = 2;
 * @return {number}
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse} returns this
 */
proto.com.samsung.datastore.recorddirectory.DeleteRecordDirectoryResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.recorddirectory.RecordDirectory.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.recorddirectory.RecordDirectory.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.recorddirectory.RecordDirectory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.recorddirectory.RecordDirectory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.recorddirectory.RecordDirectory.toObject = function(includeInstance, msg) {
  var f, obj = {
    pathList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    isSubscribed: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.recorddirectory.RecordDirectory}
 */
proto.com.samsung.datastore.recorddirectory.RecordDirectory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.recorddirectory.RecordDirectory;
  return proto.com.samsung.datastore.recorddirectory.RecordDirectory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.recorddirectory.RecordDirectory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.recorddirectory.RecordDirectory}
 */
proto.com.samsung.datastore.recorddirectory.RecordDirectory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addPath(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSubscribed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.recorddirectory.RecordDirectory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.recorddirectory.RecordDirectory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.recorddirectory.RecordDirectory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.recorddirectory.RecordDirectory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPathList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getIsSubscribed();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * repeated string path = 1;
 * @return {!Array<string>}
 */
proto.com.samsung.datastore.recorddirectory.RecordDirectory.prototype.getPathList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.com.samsung.datastore.recorddirectory.RecordDirectory} returns this
 */
proto.com.samsung.datastore.recorddirectory.RecordDirectory.prototype.setPathList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.recorddirectory.RecordDirectory} returns this
 */
proto.com.samsung.datastore.recorddirectory.RecordDirectory.prototype.addPath = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.recorddirectory.RecordDirectory} returns this
 */
proto.com.samsung.datastore.recorddirectory.RecordDirectory.prototype.clearPathList = function() {
  return this.setPathList([]);
};


/**
 * optional bool is_subscribed = 2;
 * @return {boolean}
 */
proto.com.samsung.datastore.recorddirectory.RecordDirectory.prototype.getIsSubscribed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.samsung.datastore.recorddirectory.RecordDirectory} returns this
 */
proto.com.samsung.datastore.recorddirectory.RecordDirectory.prototype.setIsSubscribed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


goog.object.extend(exports, proto.com.samsung.datastore.recorddirectory);
