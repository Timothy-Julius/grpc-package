// source: grpc/record.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.com.samsung.datastore.record.DatabaseType', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.DeleteRecordRequest', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.DeleteRecordResponse', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.FanType', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.FetchRecordRequest', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.FetchRecordResponse', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.Field', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.Field.ValueCase', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.FilterOperation', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.GetRecordRequest', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.GetRecordResponse', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.IndexDefinition', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.IndexType', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.PutRecordRequest', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.PutRecordResponse', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.QueryFilterAndNode', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.QueryFilterFieldNode', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.QueryFilterFieldNode.ValueCase', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.QueryFilterNode', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.QueryFilterNode.ContentCase', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.QueryFilterOrNode', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.QueryIsolationLevel', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.QueryRequest', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.QueryResponse', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.Record', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.RepeatedBool', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.RepeatedBytes', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.RepeatedDouble', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.RepeatedFloat', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.RepeatedInt32', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.RepeatedInt64', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.RepeatedSint32', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.RepeatedSint64', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.RepeatedString', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.RepeatedUint32', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.RepeatedUint64', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.SortByRequest', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.SortByType', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.StartingVersion', null, global);
goog.exportSymbol('proto.com.samsung.datastore.record.valueType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.PutRecordRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.record.PutRecordRequest.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.record.PutRecordRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.PutRecordRequest.displayName = 'proto.com.samsung.datastore.record.PutRecordRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.PutRecordResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.samsung.datastore.record.PutRecordResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.PutRecordResponse.displayName = 'proto.com.samsung.datastore.record.PutRecordResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.GetRecordRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.record.GetRecordRequest.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.record.GetRecordRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.GetRecordRequest.displayName = 'proto.com.samsung.datastore.record.GetRecordRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.GetRecordResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.record.GetRecordResponse.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.record.GetRecordResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.GetRecordResponse.displayName = 'proto.com.samsung.datastore.record.GetRecordResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.FetchRecordRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.record.FetchRecordRequest.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.record.FetchRecordRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.FetchRecordRequest.displayName = 'proto.com.samsung.datastore.record.FetchRecordRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.FetchRecordResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.record.FetchRecordResponse.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.record.FetchRecordResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.FetchRecordResponse.displayName = 'proto.com.samsung.datastore.record.FetchRecordResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.DeleteRecordRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.record.DeleteRecordRequest.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.record.DeleteRecordRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.DeleteRecordRequest.displayName = 'proto.com.samsung.datastore.record.DeleteRecordRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.DeleteRecordResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.samsung.datastore.record.DeleteRecordResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.DeleteRecordResponse.displayName = 'proto.com.samsung.datastore.record.DeleteRecordResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.Record = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.record.Record.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.record.Record, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.Record.displayName = 'proto.com.samsung.datastore.record.Record';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.Field = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.com.samsung.datastore.record.Field.oneofGroups_);
};
goog.inherits(proto.com.samsung.datastore.record.Field, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.Field.displayName = 'proto.com.samsung.datastore.record.Field';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.IndexDefinition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.samsung.datastore.record.IndexDefinition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.IndexDefinition.displayName = 'proto.com.samsung.datastore.record.IndexDefinition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.QueryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.record.QueryRequest.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.record.QueryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.QueryRequest.displayName = 'proto.com.samsung.datastore.record.QueryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.StartingVersion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.samsung.datastore.record.StartingVersion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.StartingVersion.displayName = 'proto.com.samsung.datastore.record.StartingVersion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.SortByRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.samsung.datastore.record.SortByRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.SortByRequest.displayName = 'proto.com.samsung.datastore.record.SortByRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.QueryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.samsung.datastore.record.QueryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.QueryResponse.displayName = 'proto.com.samsung.datastore.record.QueryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.QueryFilterNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.com.samsung.datastore.record.QueryFilterNode.oneofGroups_);
};
goog.inherits(proto.com.samsung.datastore.record.QueryFilterNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.QueryFilterNode.displayName = 'proto.com.samsung.datastore.record.QueryFilterNode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.record.QueryFilterFieldNode.repeatedFields_, proto.com.samsung.datastore.record.QueryFilterFieldNode.oneofGroups_);
};
goog.inherits(proto.com.samsung.datastore.record.QueryFilterFieldNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.QueryFilterFieldNode.displayName = 'proto.com.samsung.datastore.record.QueryFilterFieldNode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.QueryFilterAndNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.record.QueryFilterAndNode.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.record.QueryFilterAndNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.QueryFilterAndNode.displayName = 'proto.com.samsung.datastore.record.QueryFilterAndNode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.QueryFilterOrNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.record.QueryFilterOrNode.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.record.QueryFilterOrNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.QueryFilterOrNode.displayName = 'proto.com.samsung.datastore.record.QueryFilterOrNode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.RepeatedString = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.record.RepeatedString.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.record.RepeatedString, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.RepeatedString.displayName = 'proto.com.samsung.datastore.record.RepeatedString';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.RepeatedInt32 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.record.RepeatedInt32.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.record.RepeatedInt32, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.RepeatedInt32.displayName = 'proto.com.samsung.datastore.record.RepeatedInt32';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.RepeatedInt64 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.record.RepeatedInt64.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.record.RepeatedInt64, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.RepeatedInt64.displayName = 'proto.com.samsung.datastore.record.RepeatedInt64';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.RepeatedFloat = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.record.RepeatedFloat.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.record.RepeatedFloat, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.RepeatedFloat.displayName = 'proto.com.samsung.datastore.record.RepeatedFloat';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.RepeatedSint32 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.record.RepeatedSint32.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.record.RepeatedSint32, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.RepeatedSint32.displayName = 'proto.com.samsung.datastore.record.RepeatedSint32';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.RepeatedSint64 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.record.RepeatedSint64.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.record.RepeatedSint64, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.RepeatedSint64.displayName = 'proto.com.samsung.datastore.record.RepeatedSint64';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.RepeatedUint32 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.record.RepeatedUint32.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.record.RepeatedUint32, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.RepeatedUint32.displayName = 'proto.com.samsung.datastore.record.RepeatedUint32';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.RepeatedUint64 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.record.RepeatedUint64.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.record.RepeatedUint64, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.RepeatedUint64.displayName = 'proto.com.samsung.datastore.record.RepeatedUint64';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.RepeatedDouble = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.record.RepeatedDouble.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.record.RepeatedDouble, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.RepeatedDouble.displayName = 'proto.com.samsung.datastore.record.RepeatedDouble';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.RepeatedBool = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.record.RepeatedBool.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.record.RepeatedBool, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.RepeatedBool.displayName = 'proto.com.samsung.datastore.record.RepeatedBool';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.samsung.datastore.record.RepeatedBytes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.samsung.datastore.record.RepeatedBytes.repeatedFields_, null);
};
goog.inherits(proto.com.samsung.datastore.record.RepeatedBytes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.samsung.datastore.record.RepeatedBytes.displayName = 'proto.com.samsung.datastore.record.RepeatedBytes';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.record.PutRecordRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.PutRecordRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.PutRecordRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.PutRecordRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.PutRecordRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    databaseType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    recordDirectoryList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    applicationId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    containerId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    environment: jspb.Message.getFieldWithDefault(msg, 5, ""),
    ownerId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    recordType: jspb.Message.getFieldWithDefault(msg, 7, ""),
    record: (f = msg.getRecord()) && proto.com.samsung.datastore.record.Record.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.PutRecordRequest}
 */
proto.com.samsung.datastore.record.PutRecordRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.PutRecordRequest;
  return proto.com.samsung.datastore.record.PutRecordRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.PutRecordRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.PutRecordRequest}
 */
proto.com.samsung.datastore.record.PutRecordRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabaseType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addRecordDirectory(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setApplicationId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setContainerId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnvironment(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecordType(value);
      break;
    case 8:
      var value = new proto.com.samsung.datastore.record.Record;
      reader.readMessage(value,proto.com.samsung.datastore.record.Record.deserializeBinaryFromReader);
      msg.setRecord(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.PutRecordRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.PutRecordRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.PutRecordRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.PutRecordRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatabaseType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRecordDirectoryList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getApplicationId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getContainerId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getEnvironment();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOwnerId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRecordType();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getRecord();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.com.samsung.datastore.record.Record.serializeBinaryToWriter
    );
  }
};


/**
 * optional string database_type = 1;
 * @return {string}
 */
proto.com.samsung.datastore.record.PutRecordRequest.prototype.getDatabaseType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.record.PutRecordRequest} returns this
 */
proto.com.samsung.datastore.record.PutRecordRequest.prototype.setDatabaseType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string record_directory = 2;
 * @return {!Array<string>}
 */
proto.com.samsung.datastore.record.PutRecordRequest.prototype.getRecordDirectoryList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.com.samsung.datastore.record.PutRecordRequest} returns this
 */
proto.com.samsung.datastore.record.PutRecordRequest.prototype.setRecordDirectoryList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.record.PutRecordRequest} returns this
 */
proto.com.samsung.datastore.record.PutRecordRequest.prototype.addRecordDirectory = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.record.PutRecordRequest} returns this
 */
proto.com.samsung.datastore.record.PutRecordRequest.prototype.clearRecordDirectoryList = function() {
  return this.setRecordDirectoryList([]);
};


/**
 * optional int64 application_id = 3;
 * @return {number}
 */
proto.com.samsung.datastore.record.PutRecordRequest.prototype.getApplicationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.record.PutRecordRequest} returns this
 */
proto.com.samsung.datastore.record.PutRecordRequest.prototype.setApplicationId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 container_id = 4;
 * @return {number}
 */
proto.com.samsung.datastore.record.PutRecordRequest.prototype.getContainerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.record.PutRecordRequest} returns this
 */
proto.com.samsung.datastore.record.PutRecordRequest.prototype.setContainerId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string environment = 5;
 * @return {string}
 */
proto.com.samsung.datastore.record.PutRecordRequest.prototype.getEnvironment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.record.PutRecordRequest} returns this
 */
proto.com.samsung.datastore.record.PutRecordRequest.prototype.setEnvironment = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string owner_id = 6;
 * @return {string}
 */
proto.com.samsung.datastore.record.PutRecordRequest.prototype.getOwnerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.record.PutRecordRequest} returns this
 */
proto.com.samsung.datastore.record.PutRecordRequest.prototype.setOwnerId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string record_type = 7;
 * @return {string}
 */
proto.com.samsung.datastore.record.PutRecordRequest.prototype.getRecordType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.record.PutRecordRequest} returns this
 */
proto.com.samsung.datastore.record.PutRecordRequest.prototype.setRecordType = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional Record record = 8;
 * @return {?proto.com.samsung.datastore.record.Record}
 */
proto.com.samsung.datastore.record.PutRecordRequest.prototype.getRecord = function() {
  return /** @type{?proto.com.samsung.datastore.record.Record} */ (
    jspb.Message.getWrapperField(this, proto.com.samsung.datastore.record.Record, 8));
};


/**
 * @param {?proto.com.samsung.datastore.record.Record|undefined} value
 * @return {!proto.com.samsung.datastore.record.PutRecordRequest} returns this
*/
proto.com.samsung.datastore.record.PutRecordRequest.prototype.setRecord = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.samsung.datastore.record.PutRecordRequest} returns this
 */
proto.com.samsung.datastore.record.PutRecordRequest.prototype.clearRecord = function() {
  return this.setRecord(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.PutRecordRequest.prototype.hasRecord = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.PutRecordResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.PutRecordResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.PutRecordResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.PutRecordResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.PutRecordResponse}
 */
proto.com.samsung.datastore.record.PutRecordResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.PutRecordResponse;
  return proto.com.samsung.datastore.record.PutRecordResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.PutRecordResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.PutRecordResponse}
 */
proto.com.samsung.datastore.record.PutRecordResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.PutRecordResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.PutRecordResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.PutRecordResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.PutRecordResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.record.GetRecordRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.GetRecordRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.GetRecordRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.GetRecordRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    databaseType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    recordDirectoryList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    applicationId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    containerId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    environment: jspb.Message.getFieldWithDefault(msg, 5, ""),
    ownerId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    recordType: jspb.Message.getFieldWithDefault(msg, 7, ""),
    nestedScan: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    queryFilter: (f = msg.getQueryFilter()) && proto.com.samsung.datastore.record.QueryFilterNode.toObject(includeInstance, f),
    limit: jspb.Message.getFieldWithDefault(msg, 10, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.GetRecordRequest}
 */
proto.com.samsung.datastore.record.GetRecordRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.GetRecordRequest;
  return proto.com.samsung.datastore.record.GetRecordRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.GetRecordRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.GetRecordRequest}
 */
proto.com.samsung.datastore.record.GetRecordRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabaseType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addRecordDirectory(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setApplicationId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setContainerId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnvironment(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecordType(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNestedScan(value);
      break;
    case 9:
      var value = new proto.com.samsung.datastore.record.QueryFilterNode;
      reader.readMessage(value,proto.com.samsung.datastore.record.QueryFilterNode.deserializeBinaryFromReader);
      msg.setQueryFilter(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.GetRecordRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.GetRecordRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.GetRecordRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatabaseType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRecordDirectoryList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getApplicationId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getContainerId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getEnvironment();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOwnerId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRecordType();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getNestedScan();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getQueryFilter();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.com.samsung.datastore.record.QueryFilterNode.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
};


/**
 * optional string database_type = 1;
 * @return {string}
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.getDatabaseType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.record.GetRecordRequest} returns this
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.setDatabaseType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string record_directory = 2;
 * @return {!Array<string>}
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.getRecordDirectoryList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.com.samsung.datastore.record.GetRecordRequest} returns this
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.setRecordDirectoryList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.record.GetRecordRequest} returns this
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.addRecordDirectory = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.record.GetRecordRequest} returns this
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.clearRecordDirectoryList = function() {
  return this.setRecordDirectoryList([]);
};


/**
 * optional int64 application_id = 3;
 * @return {number}
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.getApplicationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.record.GetRecordRequest} returns this
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.setApplicationId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 container_id = 4;
 * @return {number}
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.getContainerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.record.GetRecordRequest} returns this
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.setContainerId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string environment = 5;
 * @return {string}
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.getEnvironment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.record.GetRecordRequest} returns this
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.setEnvironment = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string owner_id = 6;
 * @return {string}
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.getOwnerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.record.GetRecordRequest} returns this
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.setOwnerId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string record_type = 7;
 * @return {string}
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.getRecordType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.record.GetRecordRequest} returns this
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.setRecordType = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool nested_scan = 8;
 * @return {boolean}
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.getNestedScan = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.samsung.datastore.record.GetRecordRequest} returns this
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.setNestedScan = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional QueryFilterNode query_filter = 9;
 * @return {?proto.com.samsung.datastore.record.QueryFilterNode}
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.getQueryFilter = function() {
  return /** @type{?proto.com.samsung.datastore.record.QueryFilterNode} */ (
    jspb.Message.getWrapperField(this, proto.com.samsung.datastore.record.QueryFilterNode, 9));
};


/**
 * @param {?proto.com.samsung.datastore.record.QueryFilterNode|undefined} value
 * @return {!proto.com.samsung.datastore.record.GetRecordRequest} returns this
*/
proto.com.samsung.datastore.record.GetRecordRequest.prototype.setQueryFilter = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.samsung.datastore.record.GetRecordRequest} returns this
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.clearQueryFilter = function() {
  return this.setQueryFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.hasQueryFilter = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int32 limit = 10;
 * @return {number}
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.record.GetRecordRequest} returns this
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 offset = 11;
 * @return {number}
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.record.GetRecordRequest} returns this
 */
proto.com.samsung.datastore.record.GetRecordRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.record.GetRecordResponse.repeatedFields_ = [1,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.GetRecordResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.GetRecordResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.GetRecordResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.GetRecordResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordsList: jspb.Message.toObjectList(msg.getRecordsList(),
    proto.com.samsung.datastore.record.Record.toObject, includeInstance),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0),
    recordDirectoryList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.GetRecordResponse}
 */
proto.com.samsung.datastore.record.GetRecordResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.GetRecordResponse;
  return proto.com.samsung.datastore.record.GetRecordResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.GetRecordResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.GetRecordResponse}
 */
proto.com.samsung.datastore.record.GetRecordResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.samsung.datastore.record.Record;
      reader.readMessage(value,proto.com.samsung.datastore.record.Record.deserializeBinaryFromReader);
      msg.addRecords(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addRecordDirectory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.GetRecordResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.GetRecordResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.GetRecordResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.GetRecordResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.samsung.datastore.record.Record.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getRecordDirectoryList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * repeated Record records = 1;
 * @return {!Array<!proto.com.samsung.datastore.record.Record>}
 */
proto.com.samsung.datastore.record.GetRecordResponse.prototype.getRecordsList = function() {
  return /** @type{!Array<!proto.com.samsung.datastore.record.Record>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.samsung.datastore.record.Record, 1));
};


/**
 * @param {!Array<!proto.com.samsung.datastore.record.Record>} value
 * @return {!proto.com.samsung.datastore.record.GetRecordResponse} returns this
*/
proto.com.samsung.datastore.record.GetRecordResponse.prototype.setRecordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.samsung.datastore.record.Record=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.record.Record}
 */
proto.com.samsung.datastore.record.GetRecordResponse.prototype.addRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.samsung.datastore.record.Record, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.record.GetRecordResponse} returns this
 */
proto.com.samsung.datastore.record.GetRecordResponse.prototype.clearRecordsList = function() {
  return this.setRecordsList([]);
};


/**
 * optional int32 count = 2;
 * @return {number}
 */
proto.com.samsung.datastore.record.GetRecordResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.record.GetRecordResponse} returns this
 */
proto.com.samsung.datastore.record.GetRecordResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated string record_directory = 3;
 * @return {!Array<string>}
 */
proto.com.samsung.datastore.record.GetRecordResponse.prototype.getRecordDirectoryList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.com.samsung.datastore.record.GetRecordResponse} returns this
 */
proto.com.samsung.datastore.record.GetRecordResponse.prototype.setRecordDirectoryList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.record.GetRecordResponse} returns this
 */
proto.com.samsung.datastore.record.GetRecordResponse.prototype.addRecordDirectory = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.record.GetRecordResponse} returns this
 */
proto.com.samsung.datastore.record.GetRecordResponse.prototype.clearRecordDirectoryList = function() {
  return this.setRecordDirectoryList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.record.FetchRecordRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.FetchRecordRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.FetchRecordRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.FetchRecordRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.FetchRecordRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    databaseType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    recordDirectoryList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    applicationId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    containerId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    environment: jspb.Message.getFieldWithDefault(msg, 5, ""),
    ownerId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    recordType: jspb.Message.getFieldWithDefault(msg, 7, ""),
    nestedScan: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    token: jspb.Message.getFieldWithDefault(msg, 9, ""),
    limit: jspb.Message.getFieldWithDefault(msg, 10, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.FetchRecordRequest}
 */
proto.com.samsung.datastore.record.FetchRecordRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.FetchRecordRequest;
  return proto.com.samsung.datastore.record.FetchRecordRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.FetchRecordRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.FetchRecordRequest}
 */
proto.com.samsung.datastore.record.FetchRecordRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabaseType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addRecordDirectory(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setApplicationId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setContainerId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnvironment(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecordType(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNestedScan(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.FetchRecordRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.FetchRecordRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.FetchRecordRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.FetchRecordRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatabaseType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRecordDirectoryList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getApplicationId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getContainerId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getEnvironment();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOwnerId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRecordType();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getNestedScan();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
};


/**
 * optional string database_type = 1;
 * @return {string}
 */
proto.com.samsung.datastore.record.FetchRecordRequest.prototype.getDatabaseType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.record.FetchRecordRequest} returns this
 */
proto.com.samsung.datastore.record.FetchRecordRequest.prototype.setDatabaseType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string record_directory = 2;
 * @return {!Array<string>}
 */
proto.com.samsung.datastore.record.FetchRecordRequest.prototype.getRecordDirectoryList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.com.samsung.datastore.record.FetchRecordRequest} returns this
 */
proto.com.samsung.datastore.record.FetchRecordRequest.prototype.setRecordDirectoryList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.record.FetchRecordRequest} returns this
 */
proto.com.samsung.datastore.record.FetchRecordRequest.prototype.addRecordDirectory = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.record.FetchRecordRequest} returns this
 */
proto.com.samsung.datastore.record.FetchRecordRequest.prototype.clearRecordDirectoryList = function() {
  return this.setRecordDirectoryList([]);
};


/**
 * optional int64 application_id = 3;
 * @return {number}
 */
proto.com.samsung.datastore.record.FetchRecordRequest.prototype.getApplicationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.record.FetchRecordRequest} returns this
 */
proto.com.samsung.datastore.record.FetchRecordRequest.prototype.setApplicationId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 container_id = 4;
 * @return {number}
 */
proto.com.samsung.datastore.record.FetchRecordRequest.prototype.getContainerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.record.FetchRecordRequest} returns this
 */
proto.com.samsung.datastore.record.FetchRecordRequest.prototype.setContainerId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string environment = 5;
 * @return {string}
 */
proto.com.samsung.datastore.record.FetchRecordRequest.prototype.getEnvironment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.record.FetchRecordRequest} returns this
 */
proto.com.samsung.datastore.record.FetchRecordRequest.prototype.setEnvironment = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string owner_id = 6;
 * @return {string}
 */
proto.com.samsung.datastore.record.FetchRecordRequest.prototype.getOwnerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.record.FetchRecordRequest} returns this
 */
proto.com.samsung.datastore.record.FetchRecordRequest.prototype.setOwnerId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string record_type = 7;
 * @return {string}
 */
proto.com.samsung.datastore.record.FetchRecordRequest.prototype.getRecordType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.record.FetchRecordRequest} returns this
 */
proto.com.samsung.datastore.record.FetchRecordRequest.prototype.setRecordType = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool nested_scan = 8;
 * @return {boolean}
 */
proto.com.samsung.datastore.record.FetchRecordRequest.prototype.getNestedScan = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.samsung.datastore.record.FetchRecordRequest} returns this
 */
proto.com.samsung.datastore.record.FetchRecordRequest.prototype.setNestedScan = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string token = 9;
 * @return {string}
 */
proto.com.samsung.datastore.record.FetchRecordRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.record.FetchRecordRequest} returns this
 */
proto.com.samsung.datastore.record.FetchRecordRequest.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 limit = 10;
 * @return {number}
 */
proto.com.samsung.datastore.record.FetchRecordRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.record.FetchRecordRequest} returns this
 */
proto.com.samsung.datastore.record.FetchRecordRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 offset = 11;
 * @return {number}
 */
proto.com.samsung.datastore.record.FetchRecordRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.record.FetchRecordRequest} returns this
 */
proto.com.samsung.datastore.record.FetchRecordRequest.prototype.setOffset = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.record.FetchRecordResponse.repeatedFields_ = [1,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.FetchRecordResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.FetchRecordResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.FetchRecordResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.FetchRecordResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordsList: jspb.Message.toObjectList(msg.getRecordsList(),
    proto.com.samsung.datastore.record.Record.toObject, includeInstance),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0),
    token: jspb.Message.getFieldWithDefault(msg, 3, ""),
    recordDirectoryList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.FetchRecordResponse}
 */
proto.com.samsung.datastore.record.FetchRecordResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.FetchRecordResponse;
  return proto.com.samsung.datastore.record.FetchRecordResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.FetchRecordResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.FetchRecordResponse}
 */
proto.com.samsung.datastore.record.FetchRecordResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.samsung.datastore.record.Record;
      reader.readMessage(value,proto.com.samsung.datastore.record.Record.deserializeBinaryFromReader);
      msg.addRecords(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addRecordDirectory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.FetchRecordResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.FetchRecordResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.FetchRecordResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.FetchRecordResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.samsung.datastore.record.Record.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRecordDirectoryList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * repeated Record records = 1;
 * @return {!Array<!proto.com.samsung.datastore.record.Record>}
 */
proto.com.samsung.datastore.record.FetchRecordResponse.prototype.getRecordsList = function() {
  return /** @type{!Array<!proto.com.samsung.datastore.record.Record>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.samsung.datastore.record.Record, 1));
};


/**
 * @param {!Array<!proto.com.samsung.datastore.record.Record>} value
 * @return {!proto.com.samsung.datastore.record.FetchRecordResponse} returns this
*/
proto.com.samsung.datastore.record.FetchRecordResponse.prototype.setRecordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.samsung.datastore.record.Record=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.record.Record}
 */
proto.com.samsung.datastore.record.FetchRecordResponse.prototype.addRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.samsung.datastore.record.Record, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.record.FetchRecordResponse} returns this
 */
proto.com.samsung.datastore.record.FetchRecordResponse.prototype.clearRecordsList = function() {
  return this.setRecordsList([]);
};


/**
 * optional int32 count = 2;
 * @return {number}
 */
proto.com.samsung.datastore.record.FetchRecordResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.record.FetchRecordResponse} returns this
 */
proto.com.samsung.datastore.record.FetchRecordResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string token = 3;
 * @return {string}
 */
proto.com.samsung.datastore.record.FetchRecordResponse.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.record.FetchRecordResponse} returns this
 */
proto.com.samsung.datastore.record.FetchRecordResponse.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string record_directory = 4;
 * @return {!Array<string>}
 */
proto.com.samsung.datastore.record.FetchRecordResponse.prototype.getRecordDirectoryList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.com.samsung.datastore.record.FetchRecordResponse} returns this
 */
proto.com.samsung.datastore.record.FetchRecordResponse.prototype.setRecordDirectoryList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.record.FetchRecordResponse} returns this
 */
proto.com.samsung.datastore.record.FetchRecordResponse.prototype.addRecordDirectory = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.record.FetchRecordResponse} returns this
 */
proto.com.samsung.datastore.record.FetchRecordResponse.prototype.clearRecordDirectoryList = function() {
  return this.setRecordDirectoryList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.DeleteRecordRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.DeleteRecordRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    databaseType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    recordDirectoryList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    applicationId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    containerId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    environment: jspb.Message.getFieldWithDefault(msg, 5, ""),
    ownerId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    recordType: jspb.Message.getFieldWithDefault(msg, 7, ""),
    nestedScan: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    queryFilter: (f = msg.getQueryFilter()) && proto.com.samsung.datastore.record.QueryFilterNode.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.DeleteRecordRequest}
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.DeleteRecordRequest;
  return proto.com.samsung.datastore.record.DeleteRecordRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.DeleteRecordRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.DeleteRecordRequest}
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabaseType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addRecordDirectory(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setApplicationId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setContainerId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnvironment(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwnerId(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecordType(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNestedScan(value);
      break;
    case 9:
      var value = new proto.com.samsung.datastore.record.QueryFilterNode;
      reader.readMessage(value,proto.com.samsung.datastore.record.QueryFilterNode.deserializeBinaryFromReader);
      msg.setQueryFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.DeleteRecordRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.DeleteRecordRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatabaseType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRecordDirectoryList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getApplicationId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getContainerId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getEnvironment();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOwnerId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRecordType();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getNestedScan();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getQueryFilter();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.com.samsung.datastore.record.QueryFilterNode.serializeBinaryToWriter
    );
  }
};


/**
 * optional string database_type = 1;
 * @return {string}
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.prototype.getDatabaseType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.record.DeleteRecordRequest} returns this
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.prototype.setDatabaseType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string record_directory = 2;
 * @return {!Array<string>}
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.prototype.getRecordDirectoryList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.com.samsung.datastore.record.DeleteRecordRequest} returns this
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.prototype.setRecordDirectoryList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.record.DeleteRecordRequest} returns this
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.prototype.addRecordDirectory = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.record.DeleteRecordRequest} returns this
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.prototype.clearRecordDirectoryList = function() {
  return this.setRecordDirectoryList([]);
};


/**
 * optional int64 application_id = 3;
 * @return {number}
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.prototype.getApplicationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.record.DeleteRecordRequest} returns this
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.prototype.setApplicationId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 container_id = 4;
 * @return {number}
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.prototype.getContainerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.record.DeleteRecordRequest} returns this
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.prototype.setContainerId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string environment = 5;
 * @return {string}
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.prototype.getEnvironment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.record.DeleteRecordRequest} returns this
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.prototype.setEnvironment = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string owner_id = 6;
 * @return {string}
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.prototype.getOwnerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.record.DeleteRecordRequest} returns this
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.prototype.setOwnerId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string record_type = 7;
 * @return {string}
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.prototype.getRecordType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.record.DeleteRecordRequest} returns this
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.prototype.setRecordType = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool nested_scan = 8;
 * @return {boolean}
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.prototype.getNestedScan = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.samsung.datastore.record.DeleteRecordRequest} returns this
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.prototype.setNestedScan = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional QueryFilterNode query_filter = 9;
 * @return {?proto.com.samsung.datastore.record.QueryFilterNode}
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.prototype.getQueryFilter = function() {
  return /** @type{?proto.com.samsung.datastore.record.QueryFilterNode} */ (
    jspb.Message.getWrapperField(this, proto.com.samsung.datastore.record.QueryFilterNode, 9));
};


/**
 * @param {?proto.com.samsung.datastore.record.QueryFilterNode|undefined} value
 * @return {!proto.com.samsung.datastore.record.DeleteRecordRequest} returns this
*/
proto.com.samsung.datastore.record.DeleteRecordRequest.prototype.setQueryFilter = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.samsung.datastore.record.DeleteRecordRequest} returns this
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.prototype.clearQueryFilter = function() {
  return this.setQueryFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.DeleteRecordRequest.prototype.hasQueryFilter = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.DeleteRecordResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.DeleteRecordResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.DeleteRecordResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.DeleteRecordResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.DeleteRecordResponse}
 */
proto.com.samsung.datastore.record.DeleteRecordResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.DeleteRecordResponse;
  return proto.com.samsung.datastore.record.DeleteRecordResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.DeleteRecordResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.DeleteRecordResponse}
 */
proto.com.samsung.datastore.record.DeleteRecordResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.DeleteRecordResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.DeleteRecordResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.DeleteRecordResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.DeleteRecordResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 count = 1;
 * @return {number}
 */
proto.com.samsung.datastore.record.DeleteRecordResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.record.DeleteRecordResponse} returns this
 */
proto.com.samsung.datastore.record.DeleteRecordResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.record.Record.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.Record.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.Record.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.Record} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.Record.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldList: jspb.Message.toObjectList(msg.getFieldList(),
    proto.com.samsung.datastore.record.Field.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.Record}
 */
proto.com.samsung.datastore.record.Record.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.Record;
  return proto.com.samsung.datastore.record.Record.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.Record} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.Record}
 */
proto.com.samsung.datastore.record.Record.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.samsung.datastore.record.Field;
      reader.readMessage(value,proto.com.samsung.datastore.record.Field.deserializeBinaryFromReader);
      msg.addField(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.Record.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.Record.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.Record} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.Record.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.samsung.datastore.record.Field.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Field field = 1;
 * @return {!Array<!proto.com.samsung.datastore.record.Field>}
 */
proto.com.samsung.datastore.record.Record.prototype.getFieldList = function() {
  return /** @type{!Array<!proto.com.samsung.datastore.record.Field>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.samsung.datastore.record.Field, 1));
};


/**
 * @param {!Array<!proto.com.samsung.datastore.record.Field>} value
 * @return {!proto.com.samsung.datastore.record.Record} returns this
*/
proto.com.samsung.datastore.record.Record.prototype.setFieldList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.samsung.datastore.record.Field=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.record.Field}
 */
proto.com.samsung.datastore.record.Record.prototype.addField = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.samsung.datastore.record.Field, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.record.Record} returns this
 */
proto.com.samsung.datastore.record.Record.prototype.clearFieldList = function() {
  return this.setFieldList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.com.samsung.datastore.record.Field.oneofGroups_ = [[2,3,4,5,6,7,8,9,10,11,12]];

/**
 * @enum {number}
 */
proto.com.samsung.datastore.record.Field.ValueCase = {
  VALUE_NOT_SET: 0,
  STRING_VALUE: 2,
  INT32_VALUE: 3,
  INT64_VALUE: 4,
  FLOAT_VALUE: 5,
  UINT32_VALUE: 6,
  UINT64_VALUE: 7,
  SINT32_VALUE: 8,
  SINT64_VALUE: 9,
  DOUBLE_VALUE: 10,
  BOOL_VALUE: 11,
  BYTES_VALUE: 12
};

/**
 * @return {proto.com.samsung.datastore.record.Field.ValueCase}
 */
proto.com.samsung.datastore.record.Field.prototype.getValueCase = function() {
  return /** @type {proto.com.samsung.datastore.record.Field.ValueCase} */(jspb.Message.computeOneofCase(this, proto.com.samsung.datastore.record.Field.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.Field.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.Field.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.Field} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.Field.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    stringValue: (f = msg.getStringValue()) && proto.com.samsung.datastore.record.RepeatedString.toObject(includeInstance, f),
    int32Value: (f = msg.getInt32Value()) && proto.com.samsung.datastore.record.RepeatedInt32.toObject(includeInstance, f),
    int64Value: (f = msg.getInt64Value()) && proto.com.samsung.datastore.record.RepeatedInt64.toObject(includeInstance, f),
    floatValue: (f = msg.getFloatValue()) && proto.com.samsung.datastore.record.RepeatedFloat.toObject(includeInstance, f),
    uint32Value: (f = msg.getUint32Value()) && proto.com.samsung.datastore.record.RepeatedUint32.toObject(includeInstance, f),
    uint64Value: (f = msg.getUint64Value()) && proto.com.samsung.datastore.record.RepeatedUint64.toObject(includeInstance, f),
    sint32Value: (f = msg.getSint32Value()) && proto.com.samsung.datastore.record.RepeatedSint32.toObject(includeInstance, f),
    sint64Value: (f = msg.getSint64Value()) && proto.com.samsung.datastore.record.RepeatedSint64.toObject(includeInstance, f),
    doubleValue: (f = msg.getDoubleValue()) && proto.com.samsung.datastore.record.RepeatedDouble.toObject(includeInstance, f),
    boolValue: (f = msg.getBoolValue()) && proto.com.samsung.datastore.record.RepeatedBool.toObject(includeInstance, f),
    bytesValue: (f = msg.getBytesValue()) && proto.com.samsung.datastore.record.RepeatedBytes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.Field}
 */
proto.com.samsung.datastore.record.Field.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.Field;
  return proto.com.samsung.datastore.record.Field.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.Field} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.Field}
 */
proto.com.samsung.datastore.record.Field.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFieldName(value);
      break;
    case 2:
      var value = new proto.com.samsung.datastore.record.RepeatedString;
      reader.readMessage(value,proto.com.samsung.datastore.record.RepeatedString.deserializeBinaryFromReader);
      msg.setStringValue(value);
      break;
    case 3:
      var value = new proto.com.samsung.datastore.record.RepeatedInt32;
      reader.readMessage(value,proto.com.samsung.datastore.record.RepeatedInt32.deserializeBinaryFromReader);
      msg.setInt32Value(value);
      break;
    case 4:
      var value = new proto.com.samsung.datastore.record.RepeatedInt64;
      reader.readMessage(value,proto.com.samsung.datastore.record.RepeatedInt64.deserializeBinaryFromReader);
      msg.setInt64Value(value);
      break;
    case 5:
      var value = new proto.com.samsung.datastore.record.RepeatedFloat;
      reader.readMessage(value,proto.com.samsung.datastore.record.RepeatedFloat.deserializeBinaryFromReader);
      msg.setFloatValue(value);
      break;
    case 6:
      var value = new proto.com.samsung.datastore.record.RepeatedUint32;
      reader.readMessage(value,proto.com.samsung.datastore.record.RepeatedUint32.deserializeBinaryFromReader);
      msg.setUint32Value(value);
      break;
    case 7:
      var value = new proto.com.samsung.datastore.record.RepeatedUint64;
      reader.readMessage(value,proto.com.samsung.datastore.record.RepeatedUint64.deserializeBinaryFromReader);
      msg.setUint64Value(value);
      break;
    case 8:
      var value = new proto.com.samsung.datastore.record.RepeatedSint32;
      reader.readMessage(value,proto.com.samsung.datastore.record.RepeatedSint32.deserializeBinaryFromReader);
      msg.setSint32Value(value);
      break;
    case 9:
      var value = new proto.com.samsung.datastore.record.RepeatedSint64;
      reader.readMessage(value,proto.com.samsung.datastore.record.RepeatedSint64.deserializeBinaryFromReader);
      msg.setSint64Value(value);
      break;
    case 10:
      var value = new proto.com.samsung.datastore.record.RepeatedDouble;
      reader.readMessage(value,proto.com.samsung.datastore.record.RepeatedDouble.deserializeBinaryFromReader);
      msg.setDoubleValue(value);
      break;
    case 11:
      var value = new proto.com.samsung.datastore.record.RepeatedBool;
      reader.readMessage(value,proto.com.samsung.datastore.record.RepeatedBool.deserializeBinaryFromReader);
      msg.setBoolValue(value);
      break;
    case 12:
      var value = new proto.com.samsung.datastore.record.RepeatedBytes;
      reader.readMessage(value,proto.com.samsung.datastore.record.RepeatedBytes.deserializeBinaryFromReader);
      msg.setBytesValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.Field.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.Field.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.Field} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.Field.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStringValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.com.samsung.datastore.record.RepeatedString.serializeBinaryToWriter
    );
  }
  f = message.getInt32Value();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.com.samsung.datastore.record.RepeatedInt32.serializeBinaryToWriter
    );
  }
  f = message.getInt64Value();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.com.samsung.datastore.record.RepeatedInt64.serializeBinaryToWriter
    );
  }
  f = message.getFloatValue();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.com.samsung.datastore.record.RepeatedFloat.serializeBinaryToWriter
    );
  }
  f = message.getUint32Value();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.com.samsung.datastore.record.RepeatedUint32.serializeBinaryToWriter
    );
  }
  f = message.getUint64Value();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.com.samsung.datastore.record.RepeatedUint64.serializeBinaryToWriter
    );
  }
  f = message.getSint32Value();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.com.samsung.datastore.record.RepeatedSint32.serializeBinaryToWriter
    );
  }
  f = message.getSint64Value();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.com.samsung.datastore.record.RepeatedSint64.serializeBinaryToWriter
    );
  }
  f = message.getDoubleValue();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.com.samsung.datastore.record.RepeatedDouble.serializeBinaryToWriter
    );
  }
  f = message.getBoolValue();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.com.samsung.datastore.record.RepeatedBool.serializeBinaryToWriter
    );
  }
  f = message.getBytesValue();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.com.samsung.datastore.record.RepeatedBytes.serializeBinaryToWriter
    );
  }
};


/**
 * optional string field_name = 1;
 * @return {string}
 */
proto.com.samsung.datastore.record.Field.prototype.getFieldName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.record.Field} returns this
 */
proto.com.samsung.datastore.record.Field.prototype.setFieldName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional RepeatedString string_value = 2;
 * @return {?proto.com.samsung.datastore.record.RepeatedString}
 */
proto.com.samsung.datastore.record.Field.prototype.getStringValue = function() {
  return /** @type{?proto.com.samsung.datastore.record.RepeatedString} */ (
    jspb.Message.getWrapperField(this, proto.com.samsung.datastore.record.RepeatedString, 2));
};


/**
 * @param {?proto.com.samsung.datastore.record.RepeatedString|undefined} value
 * @return {!proto.com.samsung.datastore.record.Field} returns this
*/
proto.com.samsung.datastore.record.Field.prototype.setStringValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.com.samsung.datastore.record.Field.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.samsung.datastore.record.Field} returns this
 */
proto.com.samsung.datastore.record.Field.prototype.clearStringValue = function() {
  return this.setStringValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.Field.prototype.hasStringValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional RepeatedInt32 int32_value = 3;
 * @return {?proto.com.samsung.datastore.record.RepeatedInt32}
 */
proto.com.samsung.datastore.record.Field.prototype.getInt32Value = function() {
  return /** @type{?proto.com.samsung.datastore.record.RepeatedInt32} */ (
    jspb.Message.getWrapperField(this, proto.com.samsung.datastore.record.RepeatedInt32, 3));
};


/**
 * @param {?proto.com.samsung.datastore.record.RepeatedInt32|undefined} value
 * @return {!proto.com.samsung.datastore.record.Field} returns this
*/
proto.com.samsung.datastore.record.Field.prototype.setInt32Value = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.com.samsung.datastore.record.Field.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.samsung.datastore.record.Field} returns this
 */
proto.com.samsung.datastore.record.Field.prototype.clearInt32Value = function() {
  return this.setInt32Value(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.Field.prototype.hasInt32Value = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RepeatedInt64 int64_value = 4;
 * @return {?proto.com.samsung.datastore.record.RepeatedInt64}
 */
proto.com.samsung.datastore.record.Field.prototype.getInt64Value = function() {
  return /** @type{?proto.com.samsung.datastore.record.RepeatedInt64} */ (
    jspb.Message.getWrapperField(this, proto.com.samsung.datastore.record.RepeatedInt64, 4));
};


/**
 * @param {?proto.com.samsung.datastore.record.RepeatedInt64|undefined} value
 * @return {!proto.com.samsung.datastore.record.Field} returns this
*/
proto.com.samsung.datastore.record.Field.prototype.setInt64Value = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.com.samsung.datastore.record.Field.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.samsung.datastore.record.Field} returns this
 */
proto.com.samsung.datastore.record.Field.prototype.clearInt64Value = function() {
  return this.setInt64Value(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.Field.prototype.hasInt64Value = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional RepeatedFloat float_value = 5;
 * @return {?proto.com.samsung.datastore.record.RepeatedFloat}
 */
proto.com.samsung.datastore.record.Field.prototype.getFloatValue = function() {
  return /** @type{?proto.com.samsung.datastore.record.RepeatedFloat} */ (
    jspb.Message.getWrapperField(this, proto.com.samsung.datastore.record.RepeatedFloat, 5));
};


/**
 * @param {?proto.com.samsung.datastore.record.RepeatedFloat|undefined} value
 * @return {!proto.com.samsung.datastore.record.Field} returns this
*/
proto.com.samsung.datastore.record.Field.prototype.setFloatValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.com.samsung.datastore.record.Field.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.samsung.datastore.record.Field} returns this
 */
proto.com.samsung.datastore.record.Field.prototype.clearFloatValue = function() {
  return this.setFloatValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.Field.prototype.hasFloatValue = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional RepeatedUint32 uint32_value = 6;
 * @return {?proto.com.samsung.datastore.record.RepeatedUint32}
 */
proto.com.samsung.datastore.record.Field.prototype.getUint32Value = function() {
  return /** @type{?proto.com.samsung.datastore.record.RepeatedUint32} */ (
    jspb.Message.getWrapperField(this, proto.com.samsung.datastore.record.RepeatedUint32, 6));
};


/**
 * @param {?proto.com.samsung.datastore.record.RepeatedUint32|undefined} value
 * @return {!proto.com.samsung.datastore.record.Field} returns this
*/
proto.com.samsung.datastore.record.Field.prototype.setUint32Value = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.com.samsung.datastore.record.Field.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.samsung.datastore.record.Field} returns this
 */
proto.com.samsung.datastore.record.Field.prototype.clearUint32Value = function() {
  return this.setUint32Value(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.Field.prototype.hasUint32Value = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional RepeatedUint64 uint64_value = 7;
 * @return {?proto.com.samsung.datastore.record.RepeatedUint64}
 */
proto.com.samsung.datastore.record.Field.prototype.getUint64Value = function() {
  return /** @type{?proto.com.samsung.datastore.record.RepeatedUint64} */ (
    jspb.Message.getWrapperField(this, proto.com.samsung.datastore.record.RepeatedUint64, 7));
};


/**
 * @param {?proto.com.samsung.datastore.record.RepeatedUint64|undefined} value
 * @return {!proto.com.samsung.datastore.record.Field} returns this
*/
proto.com.samsung.datastore.record.Field.prototype.setUint64Value = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.com.samsung.datastore.record.Field.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.samsung.datastore.record.Field} returns this
 */
proto.com.samsung.datastore.record.Field.prototype.clearUint64Value = function() {
  return this.setUint64Value(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.Field.prototype.hasUint64Value = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional RepeatedSint32 sint32_value = 8;
 * @return {?proto.com.samsung.datastore.record.RepeatedSint32}
 */
proto.com.samsung.datastore.record.Field.prototype.getSint32Value = function() {
  return /** @type{?proto.com.samsung.datastore.record.RepeatedSint32} */ (
    jspb.Message.getWrapperField(this, proto.com.samsung.datastore.record.RepeatedSint32, 8));
};


/**
 * @param {?proto.com.samsung.datastore.record.RepeatedSint32|undefined} value
 * @return {!proto.com.samsung.datastore.record.Field} returns this
*/
proto.com.samsung.datastore.record.Field.prototype.setSint32Value = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.com.samsung.datastore.record.Field.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.samsung.datastore.record.Field} returns this
 */
proto.com.samsung.datastore.record.Field.prototype.clearSint32Value = function() {
  return this.setSint32Value(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.Field.prototype.hasSint32Value = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional RepeatedSint64 sint64_value = 9;
 * @return {?proto.com.samsung.datastore.record.RepeatedSint64}
 */
proto.com.samsung.datastore.record.Field.prototype.getSint64Value = function() {
  return /** @type{?proto.com.samsung.datastore.record.RepeatedSint64} */ (
    jspb.Message.getWrapperField(this, proto.com.samsung.datastore.record.RepeatedSint64, 9));
};


/**
 * @param {?proto.com.samsung.datastore.record.RepeatedSint64|undefined} value
 * @return {!proto.com.samsung.datastore.record.Field} returns this
*/
proto.com.samsung.datastore.record.Field.prototype.setSint64Value = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.com.samsung.datastore.record.Field.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.samsung.datastore.record.Field} returns this
 */
proto.com.samsung.datastore.record.Field.prototype.clearSint64Value = function() {
  return this.setSint64Value(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.Field.prototype.hasSint64Value = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional RepeatedDouble double_value = 10;
 * @return {?proto.com.samsung.datastore.record.RepeatedDouble}
 */
proto.com.samsung.datastore.record.Field.prototype.getDoubleValue = function() {
  return /** @type{?proto.com.samsung.datastore.record.RepeatedDouble} */ (
    jspb.Message.getWrapperField(this, proto.com.samsung.datastore.record.RepeatedDouble, 10));
};


/**
 * @param {?proto.com.samsung.datastore.record.RepeatedDouble|undefined} value
 * @return {!proto.com.samsung.datastore.record.Field} returns this
*/
proto.com.samsung.datastore.record.Field.prototype.setDoubleValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.com.samsung.datastore.record.Field.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.samsung.datastore.record.Field} returns this
 */
proto.com.samsung.datastore.record.Field.prototype.clearDoubleValue = function() {
  return this.setDoubleValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.Field.prototype.hasDoubleValue = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional RepeatedBool bool_value = 11;
 * @return {?proto.com.samsung.datastore.record.RepeatedBool}
 */
proto.com.samsung.datastore.record.Field.prototype.getBoolValue = function() {
  return /** @type{?proto.com.samsung.datastore.record.RepeatedBool} */ (
    jspb.Message.getWrapperField(this, proto.com.samsung.datastore.record.RepeatedBool, 11));
};


/**
 * @param {?proto.com.samsung.datastore.record.RepeatedBool|undefined} value
 * @return {!proto.com.samsung.datastore.record.Field} returns this
*/
proto.com.samsung.datastore.record.Field.prototype.setBoolValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.com.samsung.datastore.record.Field.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.samsung.datastore.record.Field} returns this
 */
proto.com.samsung.datastore.record.Field.prototype.clearBoolValue = function() {
  return this.setBoolValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.Field.prototype.hasBoolValue = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional RepeatedBytes bytes_value = 12;
 * @return {?proto.com.samsung.datastore.record.RepeatedBytes}
 */
proto.com.samsung.datastore.record.Field.prototype.getBytesValue = function() {
  return /** @type{?proto.com.samsung.datastore.record.RepeatedBytes} */ (
    jspb.Message.getWrapperField(this, proto.com.samsung.datastore.record.RepeatedBytes, 12));
};


/**
 * @param {?proto.com.samsung.datastore.record.RepeatedBytes|undefined} value
 * @return {!proto.com.samsung.datastore.record.Field} returns this
*/
proto.com.samsung.datastore.record.Field.prototype.setBytesValue = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.com.samsung.datastore.record.Field.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.samsung.datastore.record.Field} returns this
 */
proto.com.samsung.datastore.record.Field.prototype.clearBytesValue = function() {
  return this.setBytesValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.Field.prototype.hasBytesValue = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.IndexDefinition.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.IndexDefinition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.IndexDefinition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.IndexDefinition.toObject = function(includeInstance, msg) {
  var f, obj = {
    field: jspb.Message.getFieldWithDefault(msg, 1, ""),
    indexType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    fanType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    nestedindex: (f = msg.getNestedindex()) && proto.com.samsung.datastore.record.IndexDefinition.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.IndexDefinition}
 */
proto.com.samsung.datastore.record.IndexDefinition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.IndexDefinition;
  return proto.com.samsung.datastore.record.IndexDefinition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.IndexDefinition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.IndexDefinition}
 */
proto.com.samsung.datastore.record.IndexDefinition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setField(value);
      break;
    case 2:
      var value = /** @type {!proto.com.samsung.datastore.record.IndexType} */ (reader.readEnum());
      msg.setIndexType(value);
      break;
    case 3:
      var value = /** @type {!proto.com.samsung.datastore.record.FanType} */ (reader.readEnum());
      msg.setFanType(value);
      break;
    case 4:
      var value = new proto.com.samsung.datastore.record.IndexDefinition;
      reader.readMessage(value,proto.com.samsung.datastore.record.IndexDefinition.deserializeBinaryFromReader);
      msg.setNestedindex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.IndexDefinition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.IndexDefinition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.IndexDefinition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.IndexDefinition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getField();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIndexType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getFanType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getNestedindex();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.com.samsung.datastore.record.IndexDefinition.serializeBinaryToWriter
    );
  }
};


/**
 * optional string field = 1;
 * @return {string}
 */
proto.com.samsung.datastore.record.IndexDefinition.prototype.getField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.record.IndexDefinition} returns this
 */
proto.com.samsung.datastore.record.IndexDefinition.prototype.setField = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional IndexType index_type = 2;
 * @return {!proto.com.samsung.datastore.record.IndexType}
 */
proto.com.samsung.datastore.record.IndexDefinition.prototype.getIndexType = function() {
  return /** @type {!proto.com.samsung.datastore.record.IndexType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.com.samsung.datastore.record.IndexType} value
 * @return {!proto.com.samsung.datastore.record.IndexDefinition} returns this
 */
proto.com.samsung.datastore.record.IndexDefinition.prototype.setIndexType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional FanType fan_type = 3;
 * @return {!proto.com.samsung.datastore.record.FanType}
 */
proto.com.samsung.datastore.record.IndexDefinition.prototype.getFanType = function() {
  return /** @type {!proto.com.samsung.datastore.record.FanType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.com.samsung.datastore.record.FanType} value
 * @return {!proto.com.samsung.datastore.record.IndexDefinition} returns this
 */
proto.com.samsung.datastore.record.IndexDefinition.prototype.setFanType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional IndexDefinition nestedIndex = 4;
 * @return {?proto.com.samsung.datastore.record.IndexDefinition}
 */
proto.com.samsung.datastore.record.IndexDefinition.prototype.getNestedindex = function() {
  return /** @type{?proto.com.samsung.datastore.record.IndexDefinition} */ (
    jspb.Message.getWrapperField(this, proto.com.samsung.datastore.record.IndexDefinition, 4));
};


/**
 * @param {?proto.com.samsung.datastore.record.IndexDefinition|undefined} value
 * @return {!proto.com.samsung.datastore.record.IndexDefinition} returns this
*/
proto.com.samsung.datastore.record.IndexDefinition.prototype.setNestedindex = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.samsung.datastore.record.IndexDefinition} returns this
 */
proto.com.samsung.datastore.record.IndexDefinition.prototype.clearNestedindex = function() {
  return this.setNestedindex(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.IndexDefinition.prototype.hasNestedindex = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.record.QueryRequest.repeatedFields_ = [6,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.QueryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.QueryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.QueryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordTypeName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    filter: (f = msg.getFilter()) && proto.com.samsung.datastore.record.QueryFilterNode.toObject(includeInstance, f),
    continuation: msg.getContinuation_asB64(),
    resultlimit: jspb.Message.getFieldWithDefault(msg, 4, 0),
    sortBy: (f = msg.getSortBy()) && proto.com.samsung.datastore.record.SortByRequest.toObject(includeInstance, f),
    fieldsToReturnList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    queryIsolationLevel: jspb.Message.getFieldWithDefault(msg, 7, 0),
    resultoffset: jspb.Message.getFieldWithDefault(msg, 8, 0),
    databaseType: jspb.Message.getFieldWithDefault(msg, 9, 0),
    startingVersion: (f = msg.getStartingVersion()) && proto.com.samsung.datastore.record.StartingVersion.toObject(includeInstance, f),
    recordDirectoryList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    nestedScan: jspb.Message.getBooleanFieldWithDefault(msg, 12, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.QueryRequest}
 */
proto.com.samsung.datastore.record.QueryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.QueryRequest;
  return proto.com.samsung.datastore.record.QueryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.QueryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.QueryRequest}
 */
proto.com.samsung.datastore.record.QueryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecordTypeName(value);
      break;
    case 2:
      var value = new proto.com.samsung.datastore.record.QueryFilterNode;
      reader.readMessage(value,proto.com.samsung.datastore.record.QueryFilterNode.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setContinuation(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResultlimit(value);
      break;
    case 5:
      var value = new proto.com.samsung.datastore.record.SortByRequest;
      reader.readMessage(value,proto.com.samsung.datastore.record.SortByRequest.deserializeBinaryFromReader);
      msg.setSortBy(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addFieldsToReturn(value);
      break;
    case 7:
      var value = /** @type {!proto.com.samsung.datastore.record.QueryIsolationLevel} */ (reader.readEnum());
      msg.setQueryIsolationLevel(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResultoffset(value);
      break;
    case 9:
      var value = /** @type {!proto.com.samsung.datastore.record.DatabaseType} */ (reader.readEnum());
      msg.setDatabaseType(value);
      break;
    case 10:
      var value = new proto.com.samsung.datastore.record.StartingVersion;
      reader.readMessage(value,proto.com.samsung.datastore.record.StartingVersion.deserializeBinaryFromReader);
      msg.setStartingVersion(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addRecordDirectory(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNestedScan(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.QueryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.QueryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.QueryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordTypeName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.com.samsung.datastore.record.QueryFilterNode.serializeBinaryToWriter
    );
  }
  f = message.getContinuation_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getResultlimit();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getSortBy();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.com.samsung.datastore.record.SortByRequest.serializeBinaryToWriter
    );
  }
  f = message.getFieldsToReturnList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getQueryIsolationLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getResultoffset();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getDatabaseType();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getStartingVersion();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.com.samsung.datastore.record.StartingVersion.serializeBinaryToWriter
    );
  }
  f = message.getRecordDirectoryList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getNestedScan();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
};


/**
 * optional string record_type_name = 1;
 * @return {string}
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.getRecordTypeName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.record.QueryRequest} returns this
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.setRecordTypeName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional QueryFilterNode filter = 2;
 * @return {?proto.com.samsung.datastore.record.QueryFilterNode}
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.getFilter = function() {
  return /** @type{?proto.com.samsung.datastore.record.QueryFilterNode} */ (
    jspb.Message.getWrapperField(this, proto.com.samsung.datastore.record.QueryFilterNode, 2));
};


/**
 * @param {?proto.com.samsung.datastore.record.QueryFilterNode|undefined} value
 * @return {!proto.com.samsung.datastore.record.QueryRequest} returns this
*/
proto.com.samsung.datastore.record.QueryRequest.prototype.setFilter = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.samsung.datastore.record.QueryRequest} returns this
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.clearFilter = function() {
  return this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes continuation = 3;
 * @return {!(string|Uint8Array)}
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.getContinuation = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes continuation = 3;
 * This is a type-conversion wrapper around `getContinuation()`
 * @return {string}
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.getContinuation_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getContinuation()));
};


/**
 * optional bytes continuation = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContinuation()`
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.getContinuation_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getContinuation()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.com.samsung.datastore.record.QueryRequest} returns this
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.setContinuation = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional int32 resultLimit = 4;
 * @return {number}
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.getResultlimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.record.QueryRequest} returns this
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.setResultlimit = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional SortByRequest sort_by = 5;
 * @return {?proto.com.samsung.datastore.record.SortByRequest}
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.getSortBy = function() {
  return /** @type{?proto.com.samsung.datastore.record.SortByRequest} */ (
    jspb.Message.getWrapperField(this, proto.com.samsung.datastore.record.SortByRequest, 5));
};


/**
 * @param {?proto.com.samsung.datastore.record.SortByRequest|undefined} value
 * @return {!proto.com.samsung.datastore.record.QueryRequest} returns this
*/
proto.com.samsung.datastore.record.QueryRequest.prototype.setSortBy = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.samsung.datastore.record.QueryRequest} returns this
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.clearSortBy = function() {
  return this.setSortBy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.hasSortBy = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated string fields_to_return = 6;
 * @return {!Array<string>}
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.getFieldsToReturnList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.com.samsung.datastore.record.QueryRequest} returns this
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.setFieldsToReturnList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.record.QueryRequest} returns this
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.addFieldsToReturn = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.record.QueryRequest} returns this
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.clearFieldsToReturnList = function() {
  return this.setFieldsToReturnList([]);
};


/**
 * optional QueryIsolationLevel query_isolation_level = 7;
 * @return {!proto.com.samsung.datastore.record.QueryIsolationLevel}
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.getQueryIsolationLevel = function() {
  return /** @type {!proto.com.samsung.datastore.record.QueryIsolationLevel} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.com.samsung.datastore.record.QueryIsolationLevel} value
 * @return {!proto.com.samsung.datastore.record.QueryRequest} returns this
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.setQueryIsolationLevel = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional int32 resultOffset = 8;
 * @return {number}
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.getResultoffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.record.QueryRequest} returns this
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.setResultoffset = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional DatabaseType database_type = 9;
 * @return {!proto.com.samsung.datastore.record.DatabaseType}
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.getDatabaseType = function() {
  return /** @type {!proto.com.samsung.datastore.record.DatabaseType} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.com.samsung.datastore.record.DatabaseType} value
 * @return {!proto.com.samsung.datastore.record.QueryRequest} returns this
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.setDatabaseType = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional StartingVersion starting_version = 10;
 * @return {?proto.com.samsung.datastore.record.StartingVersion}
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.getStartingVersion = function() {
  return /** @type{?proto.com.samsung.datastore.record.StartingVersion} */ (
    jspb.Message.getWrapperField(this, proto.com.samsung.datastore.record.StartingVersion, 10));
};


/**
 * @param {?proto.com.samsung.datastore.record.StartingVersion|undefined} value
 * @return {!proto.com.samsung.datastore.record.QueryRequest} returns this
*/
proto.com.samsung.datastore.record.QueryRequest.prototype.setStartingVersion = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.samsung.datastore.record.QueryRequest} returns this
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.clearStartingVersion = function() {
  return this.setStartingVersion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.hasStartingVersion = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * repeated string record_directory = 11;
 * @return {!Array<string>}
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.getRecordDirectoryList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.com.samsung.datastore.record.QueryRequest} returns this
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.setRecordDirectoryList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.record.QueryRequest} returns this
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.addRecordDirectory = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.record.QueryRequest} returns this
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.clearRecordDirectoryList = function() {
  return this.setRecordDirectoryList([]);
};


/**
 * optional bool nested_scan = 12;
 * @return {boolean}
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.getNestedScan = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.samsung.datastore.record.QueryRequest} returns this
 */
proto.com.samsung.datastore.record.QueryRequest.prototype.setNestedScan = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.StartingVersion.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.StartingVersion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.StartingVersion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.StartingVersion.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.StartingVersion}
 */
proto.com.samsung.datastore.record.StartingVersion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.StartingVersion;
  return proto.com.samsung.datastore.record.StartingVersion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.StartingVersion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.StartingVersion}
 */
proto.com.samsung.datastore.record.StartingVersion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.StartingVersion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.StartingVersion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.StartingVersion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.StartingVersion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.com.samsung.datastore.record.StartingVersion.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.record.StartingVersion} returns this
 */
proto.com.samsung.datastore.record.StartingVersion.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.SortByRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.SortByRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.SortByRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.SortByRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    field: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.SortByRequest}
 */
proto.com.samsung.datastore.record.SortByRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.SortByRequest;
  return proto.com.samsung.datastore.record.SortByRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.SortByRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.SortByRequest}
 */
proto.com.samsung.datastore.record.SortByRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.com.samsung.datastore.record.SortByType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setField(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.SortByRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.SortByRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.SortByRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.SortByRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getField();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional SortByType type = 1;
 * @return {!proto.com.samsung.datastore.record.SortByType}
 */
proto.com.samsung.datastore.record.SortByRequest.prototype.getType = function() {
  return /** @type {!proto.com.samsung.datastore.record.SortByType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.com.samsung.datastore.record.SortByType} value
 * @return {!proto.com.samsung.datastore.record.SortByRequest} returns this
 */
proto.com.samsung.datastore.record.SortByRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string field = 2;
 * @return {string}
 */
proto.com.samsung.datastore.record.SortByRequest.prototype.getField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.record.SortByRequest} returns this
 */
proto.com.samsung.datastore.record.SortByRequest.prototype.setField = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.QueryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.QueryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.QueryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.QueryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    record: msg.getRecord_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.QueryResponse}
 */
proto.com.samsung.datastore.record.QueryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.QueryResponse;
  return proto.com.samsung.datastore.record.QueryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.QueryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.QueryResponse}
 */
proto.com.samsung.datastore.record.QueryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRecord(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.QueryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.QueryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.QueryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.QueryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecord_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes record = 1;
 * @return {!(string|Uint8Array)}
 */
proto.com.samsung.datastore.record.QueryResponse.prototype.getRecord = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes record = 1;
 * This is a type-conversion wrapper around `getRecord()`
 * @return {string}
 */
proto.com.samsung.datastore.record.QueryResponse.prototype.getRecord_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRecord()));
};


/**
 * optional bytes record = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRecord()`
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.QueryResponse.prototype.getRecord_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRecord()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.com.samsung.datastore.record.QueryResponse} returns this
 */
proto.com.samsung.datastore.record.QueryResponse.prototype.setRecord = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.com.samsung.datastore.record.QueryFilterNode.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.com.samsung.datastore.record.QueryFilterNode.ContentCase = {
  CONTENT_NOT_SET: 0,
  FIELD_NODE: 1,
  AND_NODE: 2,
  OR_NODE: 3
};

/**
 * @return {proto.com.samsung.datastore.record.QueryFilterNode.ContentCase}
 */
proto.com.samsung.datastore.record.QueryFilterNode.prototype.getContentCase = function() {
  return /** @type {proto.com.samsung.datastore.record.QueryFilterNode.ContentCase} */(jspb.Message.computeOneofCase(this, proto.com.samsung.datastore.record.QueryFilterNode.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.QueryFilterNode.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.QueryFilterNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.QueryFilterNode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.QueryFilterNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldNode: (f = msg.getFieldNode()) && proto.com.samsung.datastore.record.QueryFilterFieldNode.toObject(includeInstance, f),
    andNode: (f = msg.getAndNode()) && proto.com.samsung.datastore.record.QueryFilterAndNode.toObject(includeInstance, f),
    orNode: (f = msg.getOrNode()) && proto.com.samsung.datastore.record.QueryFilterOrNode.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.QueryFilterNode}
 */
proto.com.samsung.datastore.record.QueryFilterNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.QueryFilterNode;
  return proto.com.samsung.datastore.record.QueryFilterNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.QueryFilterNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.QueryFilterNode}
 */
proto.com.samsung.datastore.record.QueryFilterNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.samsung.datastore.record.QueryFilterFieldNode;
      reader.readMessage(value,proto.com.samsung.datastore.record.QueryFilterFieldNode.deserializeBinaryFromReader);
      msg.setFieldNode(value);
      break;
    case 2:
      var value = new proto.com.samsung.datastore.record.QueryFilterAndNode;
      reader.readMessage(value,proto.com.samsung.datastore.record.QueryFilterAndNode.deserializeBinaryFromReader);
      msg.setAndNode(value);
      break;
    case 3:
      var value = new proto.com.samsung.datastore.record.QueryFilterOrNode;
      reader.readMessage(value,proto.com.samsung.datastore.record.QueryFilterOrNode.deserializeBinaryFromReader);
      msg.setOrNode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.QueryFilterNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.QueryFilterNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.QueryFilterNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.QueryFilterNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldNode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.com.samsung.datastore.record.QueryFilterFieldNode.serializeBinaryToWriter
    );
  }
  f = message.getAndNode();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.com.samsung.datastore.record.QueryFilterAndNode.serializeBinaryToWriter
    );
  }
  f = message.getOrNode();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.com.samsung.datastore.record.QueryFilterOrNode.serializeBinaryToWriter
    );
  }
};


/**
 * optional QueryFilterFieldNode field_node = 1;
 * @return {?proto.com.samsung.datastore.record.QueryFilterFieldNode}
 */
proto.com.samsung.datastore.record.QueryFilterNode.prototype.getFieldNode = function() {
  return /** @type{?proto.com.samsung.datastore.record.QueryFilterFieldNode} */ (
    jspb.Message.getWrapperField(this, proto.com.samsung.datastore.record.QueryFilterFieldNode, 1));
};


/**
 * @param {?proto.com.samsung.datastore.record.QueryFilterFieldNode|undefined} value
 * @return {!proto.com.samsung.datastore.record.QueryFilterNode} returns this
*/
proto.com.samsung.datastore.record.QueryFilterNode.prototype.setFieldNode = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.com.samsung.datastore.record.QueryFilterNode.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.samsung.datastore.record.QueryFilterNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterNode.prototype.clearFieldNode = function() {
  return this.setFieldNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.QueryFilterNode.prototype.hasFieldNode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional QueryFilterAndNode and_node = 2;
 * @return {?proto.com.samsung.datastore.record.QueryFilterAndNode}
 */
proto.com.samsung.datastore.record.QueryFilterNode.prototype.getAndNode = function() {
  return /** @type{?proto.com.samsung.datastore.record.QueryFilterAndNode} */ (
    jspb.Message.getWrapperField(this, proto.com.samsung.datastore.record.QueryFilterAndNode, 2));
};


/**
 * @param {?proto.com.samsung.datastore.record.QueryFilterAndNode|undefined} value
 * @return {!proto.com.samsung.datastore.record.QueryFilterNode} returns this
*/
proto.com.samsung.datastore.record.QueryFilterNode.prototype.setAndNode = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.com.samsung.datastore.record.QueryFilterNode.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.samsung.datastore.record.QueryFilterNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterNode.prototype.clearAndNode = function() {
  return this.setAndNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.QueryFilterNode.prototype.hasAndNode = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional QueryFilterOrNode or_node = 3;
 * @return {?proto.com.samsung.datastore.record.QueryFilterOrNode}
 */
proto.com.samsung.datastore.record.QueryFilterNode.prototype.getOrNode = function() {
  return /** @type{?proto.com.samsung.datastore.record.QueryFilterOrNode} */ (
    jspb.Message.getWrapperField(this, proto.com.samsung.datastore.record.QueryFilterOrNode, 3));
};


/**
 * @param {?proto.com.samsung.datastore.record.QueryFilterOrNode|undefined} value
 * @return {!proto.com.samsung.datastore.record.QueryFilterNode} returns this
*/
proto.com.samsung.datastore.record.QueryFilterNode.prototype.setOrNode = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.com.samsung.datastore.record.QueryFilterNode.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.samsung.datastore.record.QueryFilterNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterNode.prototype.clearOrNode = function() {
  return this.setOrNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.QueryFilterNode.prototype.hasOrNode = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.repeatedFields_ = [40];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.oneofGroups_ = [[11,12,13,14,15,16,17,18,19,20,21,22]];

/**
 * @enum {number}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.ValueCase = {
  VALUE_NOT_SET: 0,
  STRING_VALUE: 11,
  INT32_VALUE: 12,
  INT64_VALUE: 13,
  FLOAT_VALUE: 14,
  UINT32_VALUE: 15,
  UINT64_VALUE: 16,
  SINT32_VALUE: 17,
  SINT64_VALUE: 18,
  DOUBLE_VALUE: 19,
  BOOL_VALUE: 20,
  BYTES_VALUE: 21,
  FIELD_NODE: 22
};

/**
 * @return {proto.com.samsung.datastore.record.QueryFilterFieldNode.ValueCase}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.getValueCase = function() {
  return /** @type {proto.com.samsung.datastore.record.QueryFilterFieldNode.ValueCase} */(jspb.Message.computeOneofCase(this, proto.com.samsung.datastore.record.QueryFilterFieldNode.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.QueryFilterFieldNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.QueryFilterFieldNode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    field: jspb.Message.getFieldWithDefault(msg, 1, ""),
    operation: jspb.Message.getFieldWithDefault(msg, 2, 0),
    isFieldDefinedAsRepeated: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    stringValue: jspb.Message.getFieldWithDefault(msg, 11, ""),
    int32Value: jspb.Message.getFieldWithDefault(msg, 12, 0),
    int64Value: jspb.Message.getFieldWithDefault(msg, 13, 0),
    floatValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    uint32Value: jspb.Message.getFieldWithDefault(msg, 15, 0),
    uint64Value: jspb.Message.getFieldWithDefault(msg, 16, 0),
    sint32Value: jspb.Message.getFieldWithDefault(msg, 17, 0),
    sint64Value: jspb.Message.getFieldWithDefault(msg, 18, 0),
    doubleValue: jspb.Message.getFloatingPointFieldWithDefault(msg, 19, 0.0),
    boolValue: jspb.Message.getBooleanFieldWithDefault(msg, 20, false),
    bytesValue: msg.getBytesValue_asB64(),
    fieldNode: (f = msg.getFieldNode()) && proto.com.samsung.datastore.record.QueryFilterFieldNode.toObject(includeInstance, f),
    tokensList: (f = jspb.Message.getRepeatedField(msg, 40)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.QueryFilterFieldNode;
  return proto.com.samsung.datastore.record.QueryFilterFieldNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.QueryFilterFieldNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setField(value);
      break;
    case 2:
      var value = /** @type {!proto.com.samsung.datastore.record.FilterOperation} */ (reader.readEnum());
      msg.setOperation(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsFieldDefinedAsRepeated(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setStringValue(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInt32Value(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInt64Value(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFloatValue(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUint32Value(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUint64Value(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setSint32Value(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setSint64Value(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDoubleValue(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBoolValue(value);
      break;
    case 21:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBytesValue(value);
      break;
    case 22:
      var value = new proto.com.samsung.datastore.record.QueryFilterFieldNode;
      reader.readMessage(value,proto.com.samsung.datastore.record.QueryFilterFieldNode.deserializeBinaryFromReader);
      msg.setFieldNode(value);
      break;
    case 40:
      var value = /** @type {string} */ (reader.readString());
      msg.addTokens(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.QueryFilterFieldNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.QueryFilterFieldNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getField();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getIsFieldDefinedAsRepeated();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeFloat(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint32(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeSint32(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeSint64(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeDouble(
      19,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeBool(
      20,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeBytes(
      21,
      f
    );
  }
  f = message.getFieldNode();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      proto.com.samsung.datastore.record.QueryFilterFieldNode.serializeBinaryToWriter
    );
  }
  f = message.getTokensList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      40,
      f
    );
  }
};


/**
 * optional string field = 1;
 * @return {string}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.getField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.setField = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional FilterOperation operation = 2;
 * @return {!proto.com.samsung.datastore.record.FilterOperation}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.getOperation = function() {
  return /** @type {!proto.com.samsung.datastore.record.FilterOperation} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.com.samsung.datastore.record.FilterOperation} value
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.setOperation = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bool is_field_defined_as_repeated = 3;
 * @return {boolean}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.getIsFieldDefinedAsRepeated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.setIsFieldDefinedAsRepeated = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string string_value = 11;
 * @return {string}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.getStringValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.setStringValue = function(value) {
  return jspb.Message.setOneofField(this, 11, proto.com.samsung.datastore.record.QueryFilterFieldNode.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.clearStringValue = function() {
  return jspb.Message.setOneofField(this, 11, proto.com.samsung.datastore.record.QueryFilterFieldNode.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.hasStringValue = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int32 int32_value = 12;
 * @return {number}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.getInt32Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.setInt32Value = function(value) {
  return jspb.Message.setOneofField(this, 12, proto.com.samsung.datastore.record.QueryFilterFieldNode.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.clearInt32Value = function() {
  return jspb.Message.setOneofField(this, 12, proto.com.samsung.datastore.record.QueryFilterFieldNode.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.hasInt32Value = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional int64 int64_value = 13;
 * @return {number}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.getInt64Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.setInt64Value = function(value) {
  return jspb.Message.setOneofField(this, 13, proto.com.samsung.datastore.record.QueryFilterFieldNode.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.clearInt64Value = function() {
  return jspb.Message.setOneofField(this, 13, proto.com.samsung.datastore.record.QueryFilterFieldNode.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.hasInt64Value = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional float float_value = 14;
 * @return {number}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.getFloatValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.setFloatValue = function(value) {
  return jspb.Message.setOneofField(this, 14, proto.com.samsung.datastore.record.QueryFilterFieldNode.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.clearFloatValue = function() {
  return jspb.Message.setOneofField(this, 14, proto.com.samsung.datastore.record.QueryFilterFieldNode.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.hasFloatValue = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint32 uint32_value = 15;
 * @return {number}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.getUint32Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.setUint32Value = function(value) {
  return jspb.Message.setOneofField(this, 15, proto.com.samsung.datastore.record.QueryFilterFieldNode.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.clearUint32Value = function() {
  return jspb.Message.setOneofField(this, 15, proto.com.samsung.datastore.record.QueryFilterFieldNode.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.hasUint32Value = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint64 uint64_value = 16;
 * @return {number}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.getUint64Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.setUint64Value = function(value) {
  return jspb.Message.setOneofField(this, 16, proto.com.samsung.datastore.record.QueryFilterFieldNode.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.clearUint64Value = function() {
  return jspb.Message.setOneofField(this, 16, proto.com.samsung.datastore.record.QueryFilterFieldNode.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.hasUint64Value = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional sint32 sint32_value = 17;
 * @return {number}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.getSint32Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.setSint32Value = function(value) {
  return jspb.Message.setOneofField(this, 17, proto.com.samsung.datastore.record.QueryFilterFieldNode.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.clearSint32Value = function() {
  return jspb.Message.setOneofField(this, 17, proto.com.samsung.datastore.record.QueryFilterFieldNode.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.hasSint32Value = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional sint64 sint64_value = 18;
 * @return {number}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.getSint64Value = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.setSint64Value = function(value) {
  return jspb.Message.setOneofField(this, 18, proto.com.samsung.datastore.record.QueryFilterFieldNode.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.clearSint64Value = function() {
  return jspb.Message.setOneofField(this, 18, proto.com.samsung.datastore.record.QueryFilterFieldNode.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.hasSint64Value = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional double double_value = 19;
 * @return {number}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.getDoubleValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 19, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.setDoubleValue = function(value) {
  return jspb.Message.setOneofField(this, 19, proto.com.samsung.datastore.record.QueryFilterFieldNode.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.clearDoubleValue = function() {
  return jspb.Message.setOneofField(this, 19, proto.com.samsung.datastore.record.QueryFilterFieldNode.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.hasDoubleValue = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional bool bool_value = 20;
 * @return {boolean}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.getBoolValue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.setBoolValue = function(value) {
  return jspb.Message.setOneofField(this, 20, proto.com.samsung.datastore.record.QueryFilterFieldNode.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.clearBoolValue = function() {
  return jspb.Message.setOneofField(this, 20, proto.com.samsung.datastore.record.QueryFilterFieldNode.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.hasBoolValue = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional bytes bytes_value = 21;
 * @return {!(string|Uint8Array)}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.getBytesValue = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * optional bytes bytes_value = 21;
 * This is a type-conversion wrapper around `getBytesValue()`
 * @return {string}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.getBytesValue_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBytesValue()));
};


/**
 * optional bytes bytes_value = 21;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBytesValue()`
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.getBytesValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBytesValue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.setBytesValue = function(value) {
  return jspb.Message.setOneofField(this, 21, proto.com.samsung.datastore.record.QueryFilterFieldNode.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.clearBytesValue = function() {
  return jspb.Message.setOneofField(this, 21, proto.com.samsung.datastore.record.QueryFilterFieldNode.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.hasBytesValue = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional QueryFilterFieldNode field_node = 22;
 * @return {?proto.com.samsung.datastore.record.QueryFilterFieldNode}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.getFieldNode = function() {
  return /** @type{?proto.com.samsung.datastore.record.QueryFilterFieldNode} */ (
    jspb.Message.getWrapperField(this, proto.com.samsung.datastore.record.QueryFilterFieldNode, 22));
};


/**
 * @param {?proto.com.samsung.datastore.record.QueryFilterFieldNode|undefined} value
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
*/
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.setFieldNode = function(value) {
  return jspb.Message.setOneofWrapperField(this, 22, proto.com.samsung.datastore.record.QueryFilterFieldNode.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.clearFieldNode = function() {
  return this.setFieldNode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.hasFieldNode = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * repeated string tokens = 40;
 * @return {!Array<string>}
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.getTokensList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 40));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.setTokensList = function(value) {
  return jspb.Message.setField(this, 40, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.addTokens = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 40, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.record.QueryFilterFieldNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterFieldNode.prototype.clearTokensList = function() {
  return this.setTokensList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.record.QueryFilterAndNode.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.QueryFilterAndNode.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.QueryFilterAndNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.QueryFilterAndNode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.QueryFilterAndNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodesList: jspb.Message.toObjectList(msg.getNodesList(),
    proto.com.samsung.datastore.record.QueryFilterNode.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.QueryFilterAndNode}
 */
proto.com.samsung.datastore.record.QueryFilterAndNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.QueryFilterAndNode;
  return proto.com.samsung.datastore.record.QueryFilterAndNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.QueryFilterAndNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.QueryFilterAndNode}
 */
proto.com.samsung.datastore.record.QueryFilterAndNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.samsung.datastore.record.QueryFilterNode;
      reader.readMessage(value,proto.com.samsung.datastore.record.QueryFilterNode.deserializeBinaryFromReader);
      msg.addNodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.QueryFilterAndNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.QueryFilterAndNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.QueryFilterAndNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.QueryFilterAndNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.samsung.datastore.record.QueryFilterNode.serializeBinaryToWriter
    );
  }
};


/**
 * repeated QueryFilterNode nodes = 1;
 * @return {!Array<!proto.com.samsung.datastore.record.QueryFilterNode>}
 */
proto.com.samsung.datastore.record.QueryFilterAndNode.prototype.getNodesList = function() {
  return /** @type{!Array<!proto.com.samsung.datastore.record.QueryFilterNode>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.samsung.datastore.record.QueryFilterNode, 1));
};


/**
 * @param {!Array<!proto.com.samsung.datastore.record.QueryFilterNode>} value
 * @return {!proto.com.samsung.datastore.record.QueryFilterAndNode} returns this
*/
proto.com.samsung.datastore.record.QueryFilterAndNode.prototype.setNodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.samsung.datastore.record.QueryFilterNode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.record.QueryFilterNode}
 */
proto.com.samsung.datastore.record.QueryFilterAndNode.prototype.addNodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.samsung.datastore.record.QueryFilterNode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.record.QueryFilterAndNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterAndNode.prototype.clearNodesList = function() {
  return this.setNodesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.record.QueryFilterOrNode.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.QueryFilterOrNode.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.QueryFilterOrNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.QueryFilterOrNode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.QueryFilterOrNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodesList: jspb.Message.toObjectList(msg.getNodesList(),
    proto.com.samsung.datastore.record.QueryFilterNode.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.QueryFilterOrNode}
 */
proto.com.samsung.datastore.record.QueryFilterOrNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.QueryFilterOrNode;
  return proto.com.samsung.datastore.record.QueryFilterOrNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.QueryFilterOrNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.QueryFilterOrNode}
 */
proto.com.samsung.datastore.record.QueryFilterOrNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.com.samsung.datastore.record.QueryFilterNode;
      reader.readMessage(value,proto.com.samsung.datastore.record.QueryFilterNode.deserializeBinaryFromReader);
      msg.addNodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.QueryFilterOrNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.QueryFilterOrNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.QueryFilterOrNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.QueryFilterOrNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.com.samsung.datastore.record.QueryFilterNode.serializeBinaryToWriter
    );
  }
};


/**
 * repeated QueryFilterNode nodes = 2;
 * @return {!Array<!proto.com.samsung.datastore.record.QueryFilterNode>}
 */
proto.com.samsung.datastore.record.QueryFilterOrNode.prototype.getNodesList = function() {
  return /** @type{!Array<!proto.com.samsung.datastore.record.QueryFilterNode>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.samsung.datastore.record.QueryFilterNode, 2));
};


/**
 * @param {!Array<!proto.com.samsung.datastore.record.QueryFilterNode>} value
 * @return {!proto.com.samsung.datastore.record.QueryFilterOrNode} returns this
*/
proto.com.samsung.datastore.record.QueryFilterOrNode.prototype.setNodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.com.samsung.datastore.record.QueryFilterNode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.record.QueryFilterNode}
 */
proto.com.samsung.datastore.record.QueryFilterOrNode.prototype.addNodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.com.samsung.datastore.record.QueryFilterNode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.record.QueryFilterOrNode} returns this
 */
proto.com.samsung.datastore.record.QueryFilterOrNode.prototype.clearNodesList = function() {
  return this.setNodesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.record.RepeatedString.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.RepeatedString.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.RepeatedString.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.RepeatedString} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.RepeatedString.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.RepeatedString}
 */
proto.com.samsung.datastore.record.RepeatedString.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.RepeatedString;
  return proto.com.samsung.datastore.record.RepeatedString.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.RepeatedString} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.RepeatedString}
 */
proto.com.samsung.datastore.record.RepeatedString.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.RepeatedString.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.RepeatedString.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.RepeatedString} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.RepeatedString.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string values = 1;
 * @return {!Array<string>}
 */
proto.com.samsung.datastore.record.RepeatedString.prototype.getValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.com.samsung.datastore.record.RepeatedString} returns this
 */
proto.com.samsung.datastore.record.RepeatedString.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.record.RepeatedString} returns this
 */
proto.com.samsung.datastore.record.RepeatedString.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.record.RepeatedString} returns this
 */
proto.com.samsung.datastore.record.RepeatedString.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.record.RepeatedInt32.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.RepeatedInt32.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.RepeatedInt32.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.RepeatedInt32} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.RepeatedInt32.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.RepeatedInt32}
 */
proto.com.samsung.datastore.record.RepeatedInt32.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.RepeatedInt32;
  return proto.com.samsung.datastore.record.RepeatedInt32.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.RepeatedInt32} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.RepeatedInt32}
 */
proto.com.samsung.datastore.record.RepeatedInt32.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addValues(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.RepeatedInt32.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.RepeatedInt32.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.RepeatedInt32} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.RepeatedInt32.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      1,
      f
    );
  }
};


/**
 * repeated int32 values = 1;
 * @return {!Array<number>}
 */
proto.com.samsung.datastore.record.RepeatedInt32.prototype.getValuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.samsung.datastore.record.RepeatedInt32} returns this
 */
proto.com.samsung.datastore.record.RepeatedInt32.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.record.RepeatedInt32} returns this
 */
proto.com.samsung.datastore.record.RepeatedInt32.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.record.RepeatedInt32} returns this
 */
proto.com.samsung.datastore.record.RepeatedInt32.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.record.RepeatedInt64.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.RepeatedInt64.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.RepeatedInt64.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.RepeatedInt64} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.RepeatedInt64.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.RepeatedInt64}
 */
proto.com.samsung.datastore.record.RepeatedInt64.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.RepeatedInt64;
  return proto.com.samsung.datastore.record.RepeatedInt64.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.RepeatedInt64} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.RepeatedInt64}
 */
proto.com.samsung.datastore.record.RepeatedInt64.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addValues(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.RepeatedInt64.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.RepeatedInt64.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.RepeatedInt64} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.RepeatedInt64.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writePackedInt64(
      1,
      f
    );
  }
};


/**
 * repeated int64 values = 1;
 * @return {!Array<number>}
 */
proto.com.samsung.datastore.record.RepeatedInt64.prototype.getValuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.samsung.datastore.record.RepeatedInt64} returns this
 */
proto.com.samsung.datastore.record.RepeatedInt64.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.record.RepeatedInt64} returns this
 */
proto.com.samsung.datastore.record.RepeatedInt64.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.record.RepeatedInt64} returns this
 */
proto.com.samsung.datastore.record.RepeatedInt64.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.record.RepeatedFloat.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.RepeatedFloat.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.RepeatedFloat.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.RepeatedFloat} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.RepeatedFloat.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.RepeatedFloat}
 */
proto.com.samsung.datastore.record.RepeatedFloat.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.RepeatedFloat;
  return proto.com.samsung.datastore.record.RepeatedFloat.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.RepeatedFloat} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.RepeatedFloat}
 */
proto.com.samsung.datastore.record.RepeatedFloat.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addValues(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.RepeatedFloat.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.RepeatedFloat.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.RepeatedFloat} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.RepeatedFloat.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writePackedFloat(
      1,
      f
    );
  }
};


/**
 * repeated float values = 1;
 * @return {!Array<number>}
 */
proto.com.samsung.datastore.record.RepeatedFloat.prototype.getValuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.samsung.datastore.record.RepeatedFloat} returns this
 */
proto.com.samsung.datastore.record.RepeatedFloat.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.record.RepeatedFloat} returns this
 */
proto.com.samsung.datastore.record.RepeatedFloat.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.record.RepeatedFloat} returns this
 */
proto.com.samsung.datastore.record.RepeatedFloat.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.record.RepeatedSint32.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.RepeatedSint32.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.RepeatedSint32.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.RepeatedSint32} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.RepeatedSint32.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.RepeatedSint32}
 */
proto.com.samsung.datastore.record.RepeatedSint32.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.RepeatedSint32;
  return proto.com.samsung.datastore.record.RepeatedSint32.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.RepeatedSint32} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.RepeatedSint32}
 */
proto.com.samsung.datastore.record.RepeatedSint32.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint32() : [reader.readSint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addValues(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.RepeatedSint32.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.RepeatedSint32.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.RepeatedSint32} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.RepeatedSint32.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writePackedSint32(
      1,
      f
    );
  }
};


/**
 * repeated sint32 values = 1;
 * @return {!Array<number>}
 */
proto.com.samsung.datastore.record.RepeatedSint32.prototype.getValuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.samsung.datastore.record.RepeatedSint32} returns this
 */
proto.com.samsung.datastore.record.RepeatedSint32.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.record.RepeatedSint32} returns this
 */
proto.com.samsung.datastore.record.RepeatedSint32.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.record.RepeatedSint32} returns this
 */
proto.com.samsung.datastore.record.RepeatedSint32.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.record.RepeatedSint64.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.RepeatedSint64.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.RepeatedSint64.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.RepeatedSint64} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.RepeatedSint64.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.RepeatedSint64}
 */
proto.com.samsung.datastore.record.RepeatedSint64.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.RepeatedSint64;
  return proto.com.samsung.datastore.record.RepeatedSint64.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.RepeatedSint64} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.RepeatedSint64}
 */
proto.com.samsung.datastore.record.RepeatedSint64.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedSint64() : [reader.readSint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addValues(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.RepeatedSint64.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.RepeatedSint64.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.RepeatedSint64} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.RepeatedSint64.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writePackedSint64(
      1,
      f
    );
  }
};


/**
 * repeated sint64 values = 1;
 * @return {!Array<number>}
 */
proto.com.samsung.datastore.record.RepeatedSint64.prototype.getValuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.samsung.datastore.record.RepeatedSint64} returns this
 */
proto.com.samsung.datastore.record.RepeatedSint64.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.record.RepeatedSint64} returns this
 */
proto.com.samsung.datastore.record.RepeatedSint64.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.record.RepeatedSint64} returns this
 */
proto.com.samsung.datastore.record.RepeatedSint64.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.record.RepeatedUint32.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.RepeatedUint32.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.RepeatedUint32.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.RepeatedUint32} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.RepeatedUint32.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.RepeatedUint32}
 */
proto.com.samsung.datastore.record.RepeatedUint32.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.RepeatedUint32;
  return proto.com.samsung.datastore.record.RepeatedUint32.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.RepeatedUint32} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.RepeatedUint32}
 */
proto.com.samsung.datastore.record.RepeatedUint32.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addValues(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.RepeatedUint32.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.RepeatedUint32.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.RepeatedUint32} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.RepeatedUint32.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writePackedUint32(
      1,
      f
    );
  }
};


/**
 * repeated uint32 values = 1;
 * @return {!Array<number>}
 */
proto.com.samsung.datastore.record.RepeatedUint32.prototype.getValuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.samsung.datastore.record.RepeatedUint32} returns this
 */
proto.com.samsung.datastore.record.RepeatedUint32.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.record.RepeatedUint32} returns this
 */
proto.com.samsung.datastore.record.RepeatedUint32.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.record.RepeatedUint32} returns this
 */
proto.com.samsung.datastore.record.RepeatedUint32.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.record.RepeatedUint64.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.RepeatedUint64.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.RepeatedUint64.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.RepeatedUint64} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.RepeatedUint64.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.RepeatedUint64}
 */
proto.com.samsung.datastore.record.RepeatedUint64.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.RepeatedUint64;
  return proto.com.samsung.datastore.record.RepeatedUint64.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.RepeatedUint64} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.RepeatedUint64}
 */
proto.com.samsung.datastore.record.RepeatedUint64.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addValues(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.RepeatedUint64.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.RepeatedUint64.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.RepeatedUint64} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.RepeatedUint64.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writePackedUint64(
      1,
      f
    );
  }
};


/**
 * repeated uint64 values = 1;
 * @return {!Array<number>}
 */
proto.com.samsung.datastore.record.RepeatedUint64.prototype.getValuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.samsung.datastore.record.RepeatedUint64} returns this
 */
proto.com.samsung.datastore.record.RepeatedUint64.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.record.RepeatedUint64} returns this
 */
proto.com.samsung.datastore.record.RepeatedUint64.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.record.RepeatedUint64} returns this
 */
proto.com.samsung.datastore.record.RepeatedUint64.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.record.RepeatedDouble.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.RepeatedDouble.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.RepeatedDouble.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.RepeatedDouble} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.RepeatedDouble.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.RepeatedDouble}
 */
proto.com.samsung.datastore.record.RepeatedDouble.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.RepeatedDouble;
  return proto.com.samsung.datastore.record.RepeatedDouble.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.RepeatedDouble} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.RepeatedDouble}
 */
proto.com.samsung.datastore.record.RepeatedDouble.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addValues(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.RepeatedDouble.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.RepeatedDouble.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.RepeatedDouble} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.RepeatedDouble.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writePackedDouble(
      1,
      f
    );
  }
};


/**
 * repeated double values = 1;
 * @return {!Array<number>}
 */
proto.com.samsung.datastore.record.RepeatedDouble.prototype.getValuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.com.samsung.datastore.record.RepeatedDouble} returns this
 */
proto.com.samsung.datastore.record.RepeatedDouble.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.record.RepeatedDouble} returns this
 */
proto.com.samsung.datastore.record.RepeatedDouble.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.record.RepeatedDouble} returns this
 */
proto.com.samsung.datastore.record.RepeatedDouble.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.record.RepeatedBool.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.RepeatedBool.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.RepeatedBool.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.RepeatedBool} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.RepeatedBool.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: (f = jspb.Message.getRepeatedBooleanField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.RepeatedBool}
 */
proto.com.samsung.datastore.record.RepeatedBool.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.RepeatedBool;
  return proto.com.samsung.datastore.record.RepeatedBool.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.RepeatedBool} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.RepeatedBool}
 */
proto.com.samsung.datastore.record.RepeatedBool.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<boolean>} */ (reader.isDelimited() ? reader.readPackedBool() : [reader.readBool()]);
      for (var i = 0; i < values.length; i++) {
        msg.addValues(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.RepeatedBool.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.RepeatedBool.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.RepeatedBool} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.RepeatedBool.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writePackedBool(
      1,
      f
    );
  }
};


/**
 * repeated bool values = 1;
 * @return {!Array<boolean>}
 */
proto.com.samsung.datastore.record.RepeatedBool.prototype.getValuesList = function() {
  return /** @type {!Array<boolean>} */ (jspb.Message.getRepeatedBooleanField(this, 1));
};


/**
 * @param {!Array<boolean>} value
 * @return {!proto.com.samsung.datastore.record.RepeatedBool} returns this
 */
proto.com.samsung.datastore.record.RepeatedBool.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {boolean} value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.record.RepeatedBool} returns this
 */
proto.com.samsung.datastore.record.RepeatedBool.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.record.RepeatedBool} returns this
 */
proto.com.samsung.datastore.record.RepeatedBool.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.samsung.datastore.record.RepeatedBytes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.samsung.datastore.record.RepeatedBytes.prototype.toObject = function(opt_includeInstance) {
  return proto.com.samsung.datastore.record.RepeatedBytes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.samsung.datastore.record.RepeatedBytes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.RepeatedBytes.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: msg.getValuesList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.samsung.datastore.record.RepeatedBytes}
 */
proto.com.samsung.datastore.record.RepeatedBytes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.samsung.datastore.record.RepeatedBytes;
  return proto.com.samsung.datastore.record.RepeatedBytes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.samsung.datastore.record.RepeatedBytes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.samsung.datastore.record.RepeatedBytes}
 */
proto.com.samsung.datastore.record.RepeatedBytes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.samsung.datastore.record.RepeatedBytes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.samsung.datastore.record.RepeatedBytes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.samsung.datastore.record.RepeatedBytes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.samsung.datastore.record.RepeatedBytes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      1,
      f
    );
  }
};


/**
 * repeated bytes values = 1;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.com.samsung.datastore.record.RepeatedBytes.prototype.getValuesList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * repeated bytes values = 1;
 * This is a type-conversion wrapper around `getValuesList()`
 * @return {!Array<string>}
 */
proto.com.samsung.datastore.record.RepeatedBytes.prototype.getValuesList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getValuesList()));
};


/**
 * repeated bytes values = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getValuesList()`
 * @return {!Array<!Uint8Array>}
 */
proto.com.samsung.datastore.record.RepeatedBytes.prototype.getValuesList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getValuesList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.com.samsung.datastore.record.RepeatedBytes} returns this
 */
proto.com.samsung.datastore.record.RepeatedBytes.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.com.samsung.datastore.record.RepeatedBytes} returns this
 */
proto.com.samsung.datastore.record.RepeatedBytes.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.samsung.datastore.record.RepeatedBytes} returns this
 */
proto.com.samsung.datastore.record.RepeatedBytes.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};


/**
 * @enum {number}
 */
proto.com.samsung.datastore.record.DatabaseType = {
  PUBLIC_DATABASE: 0,
  PRIVATE_DATABASE: 1,
  SHARED_DATABASE: 2
};

/**
 * @enum {number}
 */
proto.com.samsung.datastore.record.valueType = {
  UNKNOWN: 0,
  STRING: 1,
  INT_32: 2,
  INT_64: 3,
  FLOAT: 4,
  UINT_32: 5,
  UINT_64: 6,
  SINT_32: 7,
  SINT_64: 8,
  DOUBLE: 9,
  BOOL: 10,
  BYTES: 11
};

/**
 * @enum {number}
 */
proto.com.samsung.datastore.record.IndexType = {
  VALUE: 0,
  TEXT_DEFAULT_TOKENIZER: 1,
  VERSION: 2,
  MAP_KEYS: 3,
  MAP_VALUES: 4,
  MAP_KEYS_AND_VALUES: 5
};

/**
 * @enum {number}
 */
proto.com.samsung.datastore.record.FanType = {
  NONE: 0,
  FAN_OUT: 1,
  FAN_CONCATENATE: 2
};

/**
 * @enum {number}
 */
proto.com.samsung.datastore.record.QueryIsolationLevel = {
  SERIALIZABLE: 0,
  SNAPSHOT: 1
};

/**
 * @enum {number}
 */
proto.com.samsung.datastore.record.SortByType = {
  SORT_DISABLE: 0,
  SORT_BY_OLDEST_VERSION_FIRST: 1,
  SORT_BY_NEWEST_VERSION_FIRST: 2,
  SORT_BY_VALUE: 3,
  SORT_BY_VALUE_REVERSED: 4
};

/**
 * @enum {number}
 */
proto.com.samsung.datastore.record.FilterOperation = {
  GREATER_THAN_OR_EQUALS: 0,
  LESS_THAN_OR_EQUALS: 1,
  GREATER_THAN: 2,
  LESS_THAN: 3,
  START_WITH: 4,
  IS_EMPTY: 5,
  IS_NULL: 6,
  EQUALS: 7,
  NOT_EQUALS: 8,
  NOT_NULL: 9,
  MATCHES: 10,
  TEXT_CONTAINS_ANY: 11,
  TEXT_CONTAINS_ALL: 12
};

goog.object.extend(exports, proto.com.samsung.datastore.record);
